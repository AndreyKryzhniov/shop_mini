{"version":3,"sources":["Components/Shop/Shop.module.css","Components/Registration/Registration.module.css","Components/Login/Login.module.css","Components/Registration/svgImages/loader.svg","Components/Time/Time.module.css","Components/Modals/Component/Modal.module.css","App.module.css","Components/PasswordRecovery/Password.module.css","Components/Profile/Profile.module.css","Components/Modals/Component/Modals.module.css","Components/AudioPlayer/audioFile/comandir.mp3","redux/booleanReducer.ts","api/apiLogin.ts","api/apiProfile.ts","redux/profileReducer.ts","redux/loginReducer.ts","Components/Login/useLoginLogic.ts","Components/Login/Login.tsx","api/apiRegistration.ts","redux/registrationReducer.ts","Components/Registration/useRegistrationLogic.ts","Components/Registration/Registration.tsx","api/apiRecovery.ts","redux/passwordRecoveryReducer.ts","Components/PasswordRecovery/usePasswordRecoverLogic.ts","Components/PasswordRecovery/PasswordRecover.tsx","Components/Header/header.tsx","Components/Profile/useProfileLogic.ts","Components/Profile/Profile.tsx","Components/Modals/Component/Modal.tsx","Components/Modals/ModalComponentSimple/ModalComponentSimple.tsx","Components/Modals/ModalComponentQuestion/ModalComponentQuestion.tsx","Components/Modals/ModalComponentInput/ModalComponentInput.tsx","Components/Modals/ModalComponentMessage/ModalComponentMessage.tsx","Components/Modals/Modals.tsx","Components/Time/TimeTracker.tsx","Components/Time/arrayResult/ArrayResult.tsx","Components/Time/Time.tsx","Components/Color/Color.tsx","Components/Color/useColorLogic.ts","api/apiShop.ts","redux/tableReducer.ts","Components/Shop/modalAdd/ModalAdd.tsx","Components/Shop/modalDelete/ModalDelete.tsx","Components/Shop/ModalBasket.tsx","Components/Shop/Shop.tsx","Components/Shop/Basket.tsx","Components/AudioPlayer/AudioPlayer.tsx","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["module","exports","initialState","isLoading","error","success","errorAC","type","booleanReducer","state","action","instance","axios","create","baseURL","loginApi","email","password","rememberMe","post","profileApi","token","name","isAuth","reducerProfile","value","reducerLogin","useLoginLogic","useState","setLoginState","setPasswordState","setValueState","useSelector","store","boolean","profile","dispatch","useDispatch","sendData","test","String","toLowerCase","validationEmail","length","a","response","data","localStorage","setItem","putLoginTC","Login","className","s","login","onChange","e","currentTarget","target","to","placeholder","checked","onClick","disabled","src","loading","apiRegistration","reducerRegistration","useRegistrationLogic","setEmail","setPassword","repeatPassword","setRepeatPassword","useEffect","onSetEmail","onSetPassword","onSetRepeatPassword","onRegisterClick","validate","console","log","sendRegistrationRequest","Registration","registration","sp","alt","headers","recoveryAPI","isTrue","reducerPasswordRecovery","usePasswordRecoverLogic","emailValue","setEmailValue","sendEmailValue","sendRecoveryPassword","then","catch","error1","setIsTrue","alert","PasswordRecover","recover","Header","showHeader","setShowHeader","style","backgroundColor","display","justifyContent","alignItems","Button","variant","color","textDecoration","useProfileLogic","getItem","postProfileTC","Profile","Modal","children","isShow","closeModal","showing","modal","ModalComponentSimple","setShow","ModalComponentQuestion","ModalComponentInput","ModalComponentMessage","paddingTop","changeTop","showModal","setTimeout","dontShowModal","messageStyle","width","height","position","top","left","Modals","Time","props","Date","toLocaleTimeString","time","timeInThisMoment","changeTimeInThisMoment","newTime","checkTime","buttonStartStopChange","changeValueButton","buttonStartPlayPause","changeValueButtonPlay","pauseValue","changeValuePause","setInterval","firstTimeInObject","secondTimeInObject","differenceTime1","getTimezoneOffset","differenceTime","difference","elapsedTime1","allTimeTracker","addedTimeInArray","ArrayResult","newArr","setNewArr","firstTime","changeFirstTime","secondTime","changeSecondTime","arrayTime","element","map","times","TimeTracker","push","arr","Color","getColorGradient","el","getColorsString","items","deg","reduce","acc","elem","index","stringN","substring","div","margin","background","border","styles","setStyles","setColor","setDeg","id","inputMass","setInputMass","forEach","i","array","filter","input","setValues","interval","prevState","clearInterval","changeValueForGradient","newArray","changeColorForGradient","addInputElement","deleteInputElement","changeDeg","changeColor","useColorLogic","c","key","shopApi","get","newProduct","updateProduct","put","delete","answer","products","cart","buyProductInCartAC","getProductTC","deleteProductTC","message","tableReducer","p","ModalAdd","priceCost","setPriceCost","productName","setProductName","Number","addProductTC","product","price","ModalDelete","Shop","shop","updateProductTC","tableProducts","flexDirection","textAlign","tableHeader","ModalBasket","tableBody","Basket","buyProduct","buyProductTC","changeValueProductInCart","checkProduct","Audio","inputRef","createRef","audioRef","disabledUp","current","volume","ref","click","au","controls","play","pause","App","app","render","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,YAAc,0BAA0B,UAAY,0B,mBCAtED,EAAOC,QAAU,CAAC,aAAe,mCAAmC,YAAc,kCAAkC,MAAQ,4BAA4B,SAAW,+BAA+B,eAAiB,uC,mBCAnND,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,uB,mBCDpFD,EAAOC,QAAU,IAA0B,oC,mBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,0B,mBCA9DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ,wB,mBCD1BD,EAAOC,QAAU,IAA0B,sC,yPCsBrCC,EAAe,CACjBC,WAAW,EACXC,MAAO,GACPC,SAAS,GAgCAC,EAAU,SAACF,GAAD,MAAkC,CAACG,KAxD5C,QAwDyDH,UAMxDI,EAnCQ,WAAuF,IAAtFC,EAAqF,uDAAxDP,EAAcQ,EAA0C,uCACrG,OAAQA,EAAOH,MACX,IA9BI,UA+BA,OAAO,eACAE,EADP,CAEIN,WAAYM,EAAMN,YAG1B,IAnCE,QAoCE,OAAO,eACAM,EADP,CAEIL,MAAOM,EAAON,QAGtB,IAxCS,eAyCL,OAAO,eACAK,EADP,CAEIJ,QAASK,EAAOL,UAG5B,OAAOI,G,yCC9CTE,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,iDAGAC,EAAW,SACXC,EAAeC,EAAkBC,GACtC,OAAOP,EAASQ,KAAT,QAAuB,CAACH,MAAOA,EAAOC,SAAUA,EAAUC,WAAYA,KCN/EP,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,iDAGAM,EAAa,SACVC,GACR,OAAOV,EAASQ,KAAT,KAAoB,CAACE,WCa9BnB,EAAuB,CAEzBoB,KAAM,GACNC,QAAQ,GAiDGC,EA9Ce,WAA4D,IAA3Df,EAA0D,uDAA1CP,EAAcQ,EAA4B,uCACrF,OAAQA,EAAOH,MAMX,IA5BK,OA6BD,OAAO,eACAE,EADP,CACca,KAAMZ,EAAOY,OAG/B,IAlCQ,UAmCJ,OAAO,eACAb,EADP,CACcc,OAAQb,EAAOe,QAGjC,QACI,OAAOhB,ICzBbP,EAAuB,GAwCdwB,EAnCM,WAA4D,IAA3DjB,EAA0D,uDAA1CP,EAA0C,iCAapE,OAAOO,GC/BNkB,EAAgB,WAAO,IAAD,EACFC,mBAAS,IADP,mBAC1BZ,EAD0B,KACnBa,EADmB,OAEID,mBAAS,IAFb,mBAE1BX,EAF0B,KAEhBa,EAFgB,OAGGF,oBAAS,GAHZ,mBAG1BV,EAH0B,KAGda,EAHc,KAI3B3B,EAAQ4B,aAAY,SAACC,GAAD,OAAyBA,EAAMC,QAAQ9B,SAC3DmB,EAASS,aAAY,SAACC,GAAD,OAAyBA,EAAME,QAAQZ,UAC5DpB,EAAY6B,aAAY,SAACC,GAAD,OAAyBA,EAAMC,QAAQ/B,aAC/DiC,EAAWC,cAaf,MAAO,CACHd,SAAQnB,QAAOD,YAAWa,QAC1BC,WAAUC,aAAYW,gBACtBC,mBAAkBC,gBAAeO,SAXtB,YAJO,SAACtB,GAEnB,MADU,8DACCuB,KAAKC,OAAOxB,GAAOyB,eAGzBC,CAAgB1B,IAAUC,EAAS0B,OAAS,EAC7CP,EAAS9B,EAAQ,4HAEjB8B,EDuBc,SAACpB,EAAeC,EAAkBC,GAAlC,8CAA0D,WAAOkB,GAAP,eAAAQ,EAAA,sEAE5ER,EJIG,CACH7B,KArDQ,YI8CoE,SAGvDQ,EAAkBC,EAAOC,EAAUC,GAHoB,QAGxE2B,EAHwE,QAI/DC,KAAK5B,YACd6B,aAAaC,QAAQ,cAAeH,EAASC,KAAKzB,OAEtDe,EDAwB,CAAC7B,KAhDjB,UAgDgCkB,OAAO,ICP6B,gDAS5EW,EAAS9B,EAAQ,KAAEuC,SAASC,KAAK1C,QAT2C,QAWhFgC,EJLO,CACH7B,KArDQ,YI8CoE,yDAA1D,sDCvBL0C,CAAWjC,EAAOC,EAAUC,OCqBlCgC,EAtCS,WAAO,IAAD,EAIKvB,IAF3BJ,EAFsB,EAEtBA,OAAQnB,EAFc,EAEdA,MAAOD,EAFO,EAEPA,UAAWa,EAFJ,EAEIA,MAAOC,EAFX,EAEWA,SACjCC,EAHsB,EAGtBA,WAAYW,EAHU,EAGVA,cAAeC,EAHL,EAGKA,iBAC3BC,EAJsB,EAItBA,cAAeO,EAJO,EAIPA,SAGnB,OAAKf,EAID,yBAAK4B,UAAWC,IAAEC,OACd,uCACA,0BAAMF,UAAWC,IAAEhD,OAAQA,GAC3B,yBAAK+C,UAAWC,IAAEpC,OACd,wCACA,2BAAOS,MAAOT,EAAOsC,SAAU,SAACC,GAAD,OAAO1B,EAAc0B,EAAEC,cAAc/B,WAExE,6BACI,2CACA,2BAAOA,MAAOR,EAAUqC,SAAU,SAACC,GAAD,OAAOzB,EAAiByB,EAAEE,OAAOhC,QAAQlB,KAAM,cAIrF,kBAAC,IAAD,CAASmD,GAAI,qBAAqB,mDAClC,yBAAKP,UAAWC,IAAElC,YACd,2BAAOX,KAAM,WAAYoD,YAAa,cAAeL,SAAU,kBAAMvB,GAAeb,IAAa0C,QAAS1C,IAC1G,8CAEJ,4BAAQ2C,QAASvB,EAAUwB,SAAU3D,GAArC,WAECA,GACD,yBAAK4D,IAAKC,OAxBP,kBAAC,IAAD,CAAUN,GAAI,c,iBCZvB/C,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,iDAIAmD,EAAkB,SAChBjD,EAAeC,GACtB,OAAON,EAASQ,KAAK,WAAY,CAACH,QAAOC,cCuB3Cf,EAA0C,GA8DjCgE,EAxDa,WAA+G,IAA9GzD,EAA6G,uDAA1EP,EAAcQ,EAA4D,uCAmBlI,OAlBQA,EAAOH,KAkBRE,GClDD0D,EAAuB,WAAO,IAAD,EACbvC,mBAAS,IADI,mBAChCZ,EADgC,KACzBoD,EADyB,OAEPxC,mBAAS,IAFF,mBAEhCX,EAFgC,KAEtBoD,EAFsB,OAGKzC,mBAAS,IAHd,mBAGhC0C,EAHgC,KAGhBC,EAHgB,KAIjCnC,EAAWC,cAJsB,EAKHL,aAAY,SAACC,GAAyB,OAAOA,EAAMC,WAAhF9B,EALgC,EAKhCA,MAAOD,EALyB,EAKzBA,UAAWE,EALc,EAKdA,QACzBmE,qBAAU,cAAU,CAACpE,IACrBoE,qBAAU,cAAU,CAACrE,IA4BrB,MAAO,CACHC,QAAOC,UAASoE,WA5BD,SAAClB,GAChBa,EAASb,EAAEC,cAAc/B,OACzBW,EAAS9B,EAAQ,MA2BjBoE,cAzBkB,SAACnB,GACnBc,EAAYd,EAAEC,cAAc/B,OAC5BW,EAAS9B,EAAQ,MAuBFqE,oBArBS,SAACpB,GACzBgB,EAAkBhB,EAAEC,cAAc/B,OAClCW,EAAS9B,EAAQ,MAoBjBsE,gBAdoB,WAChBN,IAAmBrD,EACnBmB,EAAS9B,EAAQ,0BACVW,EAAS0B,QAAU,EAC1BP,EAAS9B,EAAQ,6CARR,SAACU,GAEd,MADmB,wCACDuB,KAAKC,OAAOxB,GAAOyB,eAOzBoC,CAAS7D,GACjBoB,EAAS9B,EAAQ,uBAEjB8B,ED0C2B,SAACpB,EAAeC,GAAhB,8CACnC,WAAOmB,GAAP,eAAAQ,EAAA,sEAEQR,ERhCD,CACH7B,KArDQ,YQkFZ,SAG6B0D,EAA0BjD,EAAOC,GAH9D,OAGY4B,EAHZ,OAIQiC,QAAQC,IAAIlC,GACZT,ER3BD,CAAC7B,KA1DS,eA0DWF,QQ2BGwC,EAASC,KAAKzC,UAL7C,gDAOQ+B,EAAS9B,EAAQ,KAAMuC,SAASC,KAAK1C,QAP7C,QASIgC,ERvCG,CACH7B,KArDQ,YQkFZ,yDADmC,sDC1ClByE,CAAwBhE,EAAOC,KAM3Bd,cCLV8E,EAjCgB,WAAO,IAAD,EAGhBd,IAFV/D,EAD0B,EAC1BA,MAAOC,EADmB,EACnBA,QAASoE,EADU,EACVA,WAAYC,EADF,EACEA,cAC/BC,EAF6B,EAE7BA,oBAAqBC,EAFQ,EAERA,gBACrBzE,EAH6B,EAG7BA,UAEJ,OAAIE,EAAgB,kBAAC,IAAD,CAAUqD,GAAG,WAG7B,yBAAKP,UAAWC,IAAE8B,cACd,wCACI,yBAAK/B,UAAWC,IAAEpC,OACd,wCACA,2BAAOT,KAAK,OAAO+C,SAAUmB,KAEjC,yBAAKtB,UAAWC,IAAEnC,UACd,2CACA,2BAAOV,KAAK,WAAW+C,SAAUoB,KAErC,yBAAKvB,UAAWC,IAAEkB,gBACd,kDACA,2BAAO/D,KAAK,WAAW+C,SAAUqB,KAEzC,0BAAMxB,UAAWC,IAAE+B,IAAK/E,GACvBD,GACD,8BAAM,yBAAK4D,IAAKC,IAASoB,IAAI,MAE7B,4BAAQvB,QAASe,EAAiBd,SAAU3D,GAA5C,YACA,kBAAC,IAAD,CAASuD,GAAG,UAAS,4C,iBChC3B/C,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,0CACTuE,QAAQ,CAAC,eAAgB,mBACzB,8BAA8B,OAGrBC,EAAc,SACdtE,GACL,OAAOL,EAASQ,KAAT,cAA6B,CAACH,WCMvCd,EAAe,CACjBqF,QAAQ,EACRnF,MAAM,IAmCKoF,EA/BwB,WACtC,IADuC/E,EACxC,uDADgDP,EAAcQ,EAC9D,uCACI,OAAQA,EAAOH,MACb,IAtBc,cAuBZ,OAAO,eACFE,EADL,GAEKC,EAAON,OAEd,QAAS,OAAOK,ICzBTgF,EAA0B,WAAO,IAAD,EACJ7D,mBAAS,IADL,mBAClC8D,EADkC,KACrBC,EADqB,KAInCvD,EAAWC,cAGjB,MAAM,CAACuD,eAFc,SAACrC,GAAyCoC,EAAcpC,EAAEC,cAAc/B,QAEtEoE,qBADM,WDwBY,IAAC7E,ECxBPoB,GDwBOpB,ECxB8B0E,EDyBjE,SAACtD,GACNkD,EAAqBtE,GAClB8E,MAAK,SAAAhD,GAEJgC,QAAQC,IAAIjC,MAEbiD,OAAM,SAAA3F,GACL,IAAI4F,EAAS5F,EAAMyC,SAASC,KAAK1C,MACjC0E,QAAQC,IAAIiB,GACZ5D,EAXiB,SAAC4D,GAAD,MAAiB,CAAEzF,KA/B1B,cA+B6CH,MAAM4F,GAWpDC,CAAUD,IACnBE,MAAMF,YE5BDG,EAZmB,WAAO,IAAD,EACSV,IAAxCG,EAD+B,EAC/BA,eAAgBC,EADe,EACfA,qBAEvB,OACE,yBAAK1C,UAAWC,IAAEgD,SACd,gDACA,2BAAO9C,SAAYsC,IACnB,4BAAQ/B,QAAWgC,GAAnB,kB,SCgBOQ,EAxBU,WAAO,IAAD,EACOzE,oBAAS,GADhB,mBACtB0E,EADsB,KACVC,EADU,KAG7B,OACE,yBAAKpD,UAAU,MAAMqD,MAAO,CAACC,gBAAiB,YACzCH,EACD,yBAAKE,MAAS,CAACE,QAAS,OAAQC,eAAgB,eAAgBC,WAAY,WACpF,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUlD,QAAW,kBAAK0C,GAAc,KAA1E,mBACA,kBAAC,IAAD,CAASC,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,UAAhE,WACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,iBAAhE,YACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,qBAAhE,UACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,YAAhE,QACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,WAAhE,UACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,SAAhE,QACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,UAAhE,SACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,SAAhE,QACA,kBAAC,IAAD,CAAS8C,MAAS,CAACQ,eAAiB,OAAQD,MAAO,SAAUrD,GAAG,UAAhE,UAEe,kBAACmD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUlD,QAAW,kBAAK0C,GAAc,KAA1E,qB,oBCjBDU,GAAkB,WAAO,IAAD,EACdjF,aAAY,SAACC,GAAD,OAAyBA,EAAME,WAA1DZ,EAD6B,EAC7BA,OAAOD,EADsB,EACtBA,KACRD,EAAuB0B,aAAamE,QAAQ,eAC5C9E,EAAWC,cAEf,OADAmC,qBAAU,WAAOpC,Eb6CQ,SAACf,GAAD,8CAA0B,WAAOe,GAAP,eAAAQ,EAAA,sEAE/CR,EHLG,CACH7B,KArDQ,YGuDuC,SAG1Ba,EAAuBC,GAHG,OAG3CwB,EAH2C,OAI/CE,aAAaC,QAAQ,cAAeH,EAASC,KAAKzB,OAClDe,EAPwB,CAAC7B,KAhDjB,UAgDgCkB,OAAO,IAQ/CW,EAVwB,CAAC7B,KA7CpB,OA6CgCe,KAUrBuB,EAASC,KAAKxB,OANiB,kDAQ/CwD,QAAQC,IAAI,KAAElC,SAASC,KAAK1C,OARmB,QAUnDgC,EHbO,CACH7B,KArDQ,YGuDuC,0DAA1B,sDa7CC4G,CAAc9F,MAAU,IAC3C,CAACE,SAAQD,OAAMc,aCOXgF,GAZW,WAAO,IAAD,EACKH,KAA1B1F,EADqB,EACrBA,OAAQD,EADa,EACbA,KAAMc,EADO,EACPA,SACrB,OAAIb,EAAgB,kBAAC,IAAD,CAAUmC,GAAI,WAG9B,yBAAKP,UAAWC,KAAEjB,SACd,4BAAKb,GACL,4BAAQuC,QAAS,WAAOzB,GduDL,SAACA,GAC5BW,aAAaC,QAAQ,cAAe,IACpCZ,EAlB2B,CAAC7B,KA/ChB,UA+C+BkB,OAAO,ScvC1C,a,oBCYG4F,GAhBiB,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OAAwB,EAAhBC,WAGhD,OAAKD,EAGD,yBAAKpE,UAAWC,KAAEqE,SACd,yBAAKtE,UAAWC,KAAEsE,OACbJ,IALO,MCeTK,GAxBwB,WAAO,IAAD,EAEjB/F,oBAAS,GAFQ,mBAEpC2F,EAFoC,KAE5BK,EAF4B,KAIrCJ,EAAa,WACbI,GAAQ,IAOZ,OACI,6BACI,kBAAC,GAAD,CAAOL,OAAQA,EAAQC,WAAYA,GAC/B,8CACA,4BAAQ3D,QAAS2D,GAAjB,UAEJ,4BAAQ3D,QAVA,WACZ+D,GAAQ,KASJ,uBCWGC,GA7B0B,WAAO,IAAD,EAEnBjG,oBAAS,GAFU,mBAEtC2F,EAFsC,KAE9BK,EAF8B,KAIvCJ,EAAa,WACbI,GAAQ,IASZ,OACI,6BACI,kBAAC,GAAD,CAAOL,OAAQA,EAAQC,WAAYA,GAC/B,gDACA,6BACI,4BAAQ3D,QAAS2D,GAAjB,OACA,4BAAQ3D,QAAS2D,GAAjB,QAGR,4BAAQ3D,QAfA,WACZ+D,GAAQ,KAcJ,uBARJ,OCYOE,GA3BuB,WAAO,IAAD,EAEhBlG,oBAAS,GAFO,mBAEnC2F,EAFmC,KAE3BK,EAF2B,KAIpCJ,EAAa,WACbI,GAAQ,IAOZ,OACI,6BACI,kBAAC,GAAD,CAAOL,OAAQA,EAAQC,WAAYA,GAC/B,gDACA,gCACA,gCACA,gCACA,4BAAQ3D,QAAS2D,GAAjB,OAEJ,4BAAQ3D,QAbA,WACZ+D,GAAQ,KAYJ,oBARJ,kBCsCOG,GAnDyB,WAAO,IAAD,EAEZnG,oBAAU,IAFE,mBAErCoG,EAFqC,KAEzBC,EAFyB,KAMlCzD,qBAAU,WAAYwD,IAAe,IAAIE,MAAc,CAACF,IAGhE,IAAIE,EAAY,WACRF,EAAa,IAAMG,YAAW,WAC9BF,EAAUD,EAAW,KACtB,KACCC,EAAU,KACVG,MAIJA,EAAgB,WAChBD,YAAW,WACPA,YAAW,WACPF,GAAW,MACZ,MACJ,MAMHI,EAA8B,CAC9BC,MAAO,GACPC,OAAQ,GACR9B,gBAAiB,MACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ4B,SAAU,QACVC,IAAKT,EACLU,KAAM,mBAGV,OACI,6BACI,yBAAKlC,MAAO6B,GACR,gDAEJ,4BAAQxE,QAASqE,GAAjB,wB,oBC5BGS,GAbU,WAErB,OACI,yBAAKxF,UAAWC,KAAEsE,OACd,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,6BCoEGkB,GAhFF,SAACC,GAAgB,IAAD,EAEZjH,oBAAS,IAAIkH,MAAOC,sBAA5BC,EAFoB,sBAGwBpH,oBAAS,IAAIkH,MAAOC,sBAH5C,mBAGpBE,EAHoB,KAGFC,EAHE,OAUEtH,mBAASoH,GAVX,mBAUpBG,EAVoB,KAUXC,EAVW,OAWwBxH,oBAAS,GAXjC,mBAWpByH,EAXoB,KAWGC,EAXH,OAY2B1H,oBAAS,GAZpC,mBAYpB2H,EAZoB,KAYEC,EAZF,OAaY5H,mBAAS,YAbrB,mBAapB6H,EAboB,KAaRC,EAbQ,KAezBlF,qBAAU,WACNmF,aAAY,WACRP,GAAU,IAAIN,MAAOC,wBACtB,OACJ,CAACI,IAEJ,IAEIS,EAAyB,IAAId,KAAK,sBAFtBO,EAAwBF,EAAUF,IAI9CY,EAA0B,IAAIf,KAAK,qBAAuBK,GAE1DW,IAA0B,IAAIhB,MAAOiB,oBAAoB,GAAI,EAE7DC,EAAsB,IAAIlB,KAAK,KAAM,EAAG,EAAGgB,GAE3CG,EAAkB,IAAInB,KAAK,qBAAuBW,GAKlDS,GAFclB,EAAQG,EAAU,IAAIL,KAAKc,EAAmBC,EAAqBG,EAAiBC,GAAc,IAAInB,KAAKe,EAAqBD,EAAoBI,EAAiBC,IAEhJlB,qBAqBnCoB,EAAkBZ,EAAuBW,EAAeT,EAE5D,OAEI,yBAAKtG,UAAWC,KAAE4F,MACd,8CACA,kCAAQG,EAAR,KACA,6BACI,8CAAoBE,EAAwBF,EAAUF,EAAtD,gBAAqFE,EAArF,gBAA2GgB,EAA3G,MAEHd,EACG,4BAAQxF,QA/DG,WACnBqF,GAAuB,IAAIJ,MAAOC,sBAClCO,GAAkB,KA6DV,SAAoD,6BAChD,4BAAQzF,QA/BG,WACvB2F,GAAsB,GACtBF,GAAkB,GAClB,IAAI7H,EAAQ8H,EAAuBW,EAAeT,EAClDZ,EAAMuB,iBAAiB3I,KA2BX,QACC8H,EACG,4BAAQ1F,QAzBD,WACvB2F,GAAsB,GACtBE,EAAiBQ,KAuBD,SACA,4BAAQrG,QArBF,WACtB2F,GAAsB,GACtBE,EAAiBQ,KAmBD,WC5DTG,GATK,SAACxB,GAEjB,OACI,6BACI,6BAAMA,EAAMG,QC0DTJ,GA3DQ,WAAO,IAAD,EACChH,mBAAS,IADV,mBACpB0I,EADoB,KACZC,EADY,OAEZ3I,oBAAS,IAAIkH,MAAOC,sBAA5BC,EAFoB,sBAGUpH,oBAAS,IAAIkH,MAAOC,sBAH9B,mBAGpByB,EAHoB,KAGTC,EAHS,OAIY7I,oBAAS,IAAIkH,MAAOC,sBAJhC,mBAIpB2B,EAJoB,KAIRC,EAJQ,KAerBf,EAAyB,IAAId,KAAK,qBAAuB0B,GAEzDX,EAA0B,IAAIf,KAAK,qBAAuB4B,GAE1DZ,IAA0B,IAAIhB,MAAOiB,oBAAsB,GAAM,EAEjEC,EAAsB,IAAIlB,KAAK,KAAM,EAAG,EAAGgB,GAI3CI,GAFcM,EAAYE,EAAa,IAAI5B,KAAKc,EAAoBC,EAAqBG,GAAkB,IAAIlB,KAAKe,EAAqBD,EAAoBI,IAElIjB,qBAE3B6B,EAA2B,GAE3BC,EAAUP,EAAOQ,KAAI,SAAAC,GACrB,OAAO,kBAAC,GAAD,CAAa/B,KAAM+B,OAW9B,OACI,yBAAK5H,UAAWC,KAAE4F,MACd,oCACA,6BAAMA,GACN,2BAAOzI,KAAM,SACb,6BACI,2BAAOA,KAAM,OAAQkB,MAAO+I,EAAWlH,SAxCjC,SAACC,GACfkH,EAAgBlH,EAAEC,cAAc/B,UAsC5B,MACsE,2BAAOlB,KAAM,OACNkB,MAAOiJ,EACPpH,SAtClE,SAACC,GAChBoH,EAAiBpH,EAAEC,cAAc/B,UAkC7B,MAGyG,2BACrGlB,KAAM,OAAQkB,MAAOyI,KAEzB,kBAACc,GAAD,CAAaZ,iBAnBE,SAACF,GACd,aAAeA,GACjBU,EAAUK,KAAKf,GACnB,IAAIgB,EAAWZ,EACfY,EAAG,uBAAOA,GAAP,CAAYhB,IACfK,EAAUW,MAeLL,IC/BEM,I,MA3BS,WAAO,IAAD,ECDD,WACzB,IAAMC,EAAmB,SAACC,GAAD,gBAAwBA,EAAGtE,MAA3B,YAAoCsE,EAAG5J,MAAvC,OACnB6J,EAAkB,SAACC,EAAYC,GAAb,OAA6BD,EAAME,QAAO,SAACC,EAAaC,EAAWC,GACvF,GAAIA,IAAUL,EAAM5I,OAAS,EAAG,CAC5B,IAAIkJ,EAAUT,EAAiBO,GAC/BD,EAAG,UAAMA,GAAN,OAAYG,EAAQC,UAAU,EAAGD,EAAQlJ,OAAS,GAAlD,UAEH+I,GAAYN,EAAiBO,GAEjC,OAAOD,IAP0C,0BAQ/BF,EAR+B,UAFtB,EAWH5J,mBAAS,CACjCmK,IAAK,CACDzD,MAAO,QACPC,OAAQ,QACRyD,OAAQ,OACRC,WAAY,GACZC,OAAQ,qBAjBe,mBAWxBC,EAXwB,KAWhBC,EAXgB,OAoBPxK,mBAAS,WApBF,mBAoB1BmF,EApB0B,KAoBnBsF,EApBmB,OAqBXzK,mBAAS,MArBE,mBAqB1B4J,EArB0B,KAqBrBc,EArBqB,OAsBC1K,mBAAS,CACrC,CAACmF,MAAO,UAAWtF,OAAQ,GAAI8K,GAAI,GACnC,CAACxF,MAAO,UAAWtF,MAAO,GAAI8K,GAAI,GAClC,CAACxF,MAAO,UAAWtF,MAAO,GAAI8K,GAAI,GAClC,CAACxF,MAAO,UAAWtF,MAAO,GAAI8K,GAAI,GAClC,CAACxF,MAAO,UAAWtF,MAAO,IAAK8K,GAAI,KA3BR,mBAsB1BC,EAtB0B,KAsBfC,EAtBe,KA4B/BjI,qBAAU,WACNgI,EAAUE,SAAQ,SAACrB,EAASsB,EAAWC,GAClB,MAAbvB,EAAG5J,QACH4J,EAAG5J,MAAQ4J,EAAG5J,MAAQ,EACtBgL,EAAa,CAAC,eAAIpB,EAAN,CAAU5J,OAAQ,MAAlB,oBAA0B+K,EAAUK,QAAO,SAACC,GACpD,OAAOA,EAAMrL,MAAQ,cAKjC2K,EAAU,eAECD,EAFF,CAGDJ,IAAI,eACGI,EAAOJ,IADX,CAECE,WAAYX,EAAgBkB,EAAWhB,UAIpD,CAACgB,EAAWhB,IA0Df,MAAO,CACHuB,UAhBc,WACd,IAAIJ,EAAI,GACFK,EAAWrD,aAAY,WACzB8C,GAAa,SAAAQ,GAAS,OAAIA,EAAUnC,KAAI,SAAAO,GACpC,OAAO,eACAA,EADP,CAEI5J,MAAO4J,EAAG5J,MAAQ,UAG1BkL,MACD,KACO,IAANA,GACAO,cAAcF,IAIPG,uBA1BgB,SAAC5J,EAAsCgJ,GAClE,IAAIa,EAAgBZ,EAAU1B,KAAI,SAAAO,GAC9B,OAAIA,EAAGkB,KAAOA,EACH,eAAIlB,EAAX,CAAe5J,MAAO8B,EAAEC,cAAc/B,QAE/B4J,KAGfoB,EAAaW,IAkBsBC,uBApCR,SAAC9J,EAAsCgJ,GAClE,IAAIa,EAAgBZ,EAAU1B,KAAI,SAAAO,GAC9B,OAAIA,EAAGkB,KAAOA,EACH,eAAIlB,EAAX,CAAetE,MAAOxD,EAAEC,cAAc/B,QAE/B4J,KAGfoB,EAAaW,IA6BbE,gBAhDoB,WACpBb,EAAa,GAAD,oBAEDD,GAFC,gBAIGA,EAAUA,EAAU7J,OAAS,GAJhC,CAKA4J,GAAIC,EAAUA,EAAU7J,OAAS,GAAG4J,GAAK,QA0CpCgB,mBArDM,SAAChB,GACxBE,EAAaD,EAAUK,QAAO,SAACxB,GAC3B,OAAOA,EAAGkB,KAAOA,OAmDgBiB,UAxDvB,SAACjK,GACf+I,EAAO/I,EAAEC,cAAc/B,QAwDvBgM,YA5DgB,SAAClK,GACjB8I,EAAS9I,EAAEC,cAAc/B,QA2DZsF,QAAOoF,SAAQX,MAAKgB,aDvGakB,GAF3CX,EAFmB,EAEnBA,UAAWI,EAFQ,EAERA,uBAAwBE,EAFhB,EAEgBA,uBACtCC,EAHsB,EAGtBA,gBAAiBC,EAHK,EAGLA,mBAAoBC,EAHf,EAGeA,UACrCC,EAJsB,EAItBA,YAAa1G,EAJS,EAITA,MAAOoF,EAJE,EAIFA,OAAQX,EAJN,EAIMA,IAAKgB,EAJX,EAIWA,UAErC,OACI,yBAAKrJ,UAAU,kBACX,2CACA,2BAAO5C,KAAK,QAAQ+C,SAAUmK,EAAahM,MAAOsF,IAClD,yBAAK5D,UAAU,aAAaqD,MAAO,CAACC,gBAAiBM,KACrD,yBAAKP,MAAO2F,EAAOJ,MACnB,4BAAQlI,QAASkJ,GAAjB,SACA,2BAAOxM,KAAK,SAASkB,MAAO+J,EAAKlI,SAAUkK,IAC1ChB,EAAU1B,KAAI,SAAC6C,EAAQhB,GACpB,OACI,yBAAKiB,IAAKjB,GACN,2BAAOpM,KAAK,QAAQkB,MAAOkM,EAAE5G,MAAOzD,SAAU,SAACC,GAAD,OAAO8J,EAAuB9J,EAAGoK,EAAEpB,OACjF,2BAAOhM,KAAK,SAASkB,MAAOkM,EAAElM,MAAO6B,SAAU,SAACC,GAAD,OAAO4J,EAAuB5J,EAAGoK,EAAEpB,OAClF,4BAAQ1I,QAAS,kBAAM0J,EAAmBI,EAAEpB,MAA5C,cAGZ,4BAAQ1I,QAASyJ,GAAjB,UEvBN3M,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,2CAGA+M,GAAU,WAEf,OAAOlN,GAASmN,IAAI,uBAFfD,GAAU,SAINE,GACT,OAAOpN,GAASQ,KAAK,QAAS4M,IALzBF,GAAU,SAOPG,GACR,OAAOrN,GAASsN,IAAI,QAASD,IARxBH,GAAU,SAUJtB,GACX,OAAO5L,GAASuN,OAAT,mBAA4B3B,KAX9BsB,GAAU,SAaPtB,GAER,OAAO5L,GAASQ,KAAK,YAAYoL,GAC5BzG,MAAK,SAAAjD,GAAaqD,MAAMrD,EAASC,KAAKqL,YCoC7CjO,GAAuB,CACzBkO,SAAU,GACVC,KAAM,IA8CGC,GAAqB,SAAC/B,GAC/B,MAAO,CACHhM,KApGqB,uBAoGMgM,OAuBtBgC,GAAe,yDAAM,WAAOnM,GAAP,eAAAQ,EAAA,sEACTiL,KADS,QAC1BhL,EAD0B,QAEjBC,KAAKsL,SAASzL,QAAU,GACjCP,EArBG,CACH7B,KA9Ga,eA8GO6N,SAoBEvL,EAASC,KAAKsL,WAHV,2CAAN,uDAgBfI,GAAkB,SAACjC,GAAD,8CAAgB,WAAOnK,GAAP,SAAAQ,EAAA,+EAEjCiL,GAAuBrL,OAAO+J,IAFG,uBAGjCnK,EAASmM,MAHwB,uDAKvCrI,MAAM,KAAErD,SAAW,KAAEA,SAASC,KAAK1C,MAAQ,KAAEqO,SALN,yDAAhB,uDA4BhBC,GAhHM,WAA6D,IAA5DjO,EAA2D,uDAA3CP,GAAcQ,EAA6B,uCAC7E,OAAQA,EAAOH,MACX,IA7Da,eA8DT,OAAO,eACAE,EADP,CACc2N,SAAU1N,EAAO0N,WAGnC,IAjEqB,uBAkEjB,OAAO,eACA3N,EADP,CACc4N,KAAK,GAAD,oBAAM5N,EAAM4N,MAAZ,CAAkB3N,EAAO2N,SAG/C,IArEwB,0BA0ExB,IAxEqB,uBAyEjB,OAAO,eACA5N,EADP,CACc4N,KAAK,aAAK5N,EAAM4N,KAAKxB,QAAO,SAAA8B,GAAC,OAAKA,EAAElN,YAGtD,IA9EsB,wBA+ElB,OAAO,eACAhB,EADP,CACc4N,KAAM5N,EAAM4N,KAAKvD,KAAI,SAAC6D,EAAG/C,GAE/B,OAAIA,IAAUlL,EAAOkL,MACV,eAAI+C,EAAX,CAAclN,OAAQkN,EAAElN,QAEjBkN,OAM3B,OAAOlO,G,oBC9CImO,GA9CY,WACvB,IAAIxM,EAAWC,cADc,EAaGT,mBAAS,GAbZ,mBAaxBiN,EAbwB,KAabC,EAba,OAiBOlN,mBAAS,KAjBhB,mBAiBxBmN,EAjBwB,KAiBXC,EAjBW,OAqBLpN,oBAAS,GArBJ,mBAqBxB2F,EArBwB,KAqBhBK,EArBgB,KAuBzBJ,EAAa,WACbI,GAAQ,IAOZ,OACI,6BACI,kBAAC,GAAD,CAAOL,OAAQA,EAAQC,WAAYA,GAC/B,4BAAQ3D,QAAS2D,GAAjB,SACA,kDACA,2BAAOlE,SAlBE,SAACC,GAClByL,EAAezL,EAAEC,cAAc/B,QAiBUkC,YAAY,sBAC7C,2BAAOL,SAvBK,SAACC,GACrBuL,EAAaG,OAAO1L,EAAEC,cAAc/B,SAsBQkC,YAAY,MAChD,4BAAQE,QAnCH,WAObzB,ED0HoB,SAAC2L,GAAD,8CAAsC,WAAO3L,GAAP,SAAAQ,EAAA,+EAEpDiL,GAAqBE,GAF+B,uBAGpD3L,EAASmM,MAH2C,uDAK1DrI,MAAM,KAAErD,SAAW,KAAEA,SAASC,KAAK1C,MAAQ,KAAEqO,SALa,yDAAtC,sDC1HXS,CANQ,CACbC,QAAS,CACLJ,YAAaA,EACbK,MAAOP,MAIfrH,MA2BQ,OAEJ,4BAAQ3D,QAbA,WACZ+D,GAAQ,KAYJ,SCEGyH,GAxC2B,SAACxG,GACvC,IAAIzG,EAAWC,cADyC,EAUhCT,oBAAS,GAVuB,mBAUnD2F,EAVmD,KAU3CK,EAV2C,KAYhDJ,EAAa,WACbI,GAAQ,IASZ,OAEI,6BACI,kBAAC,GAAD,CAAOL,OAAQA,EAAQC,WAAYA,GAC/B,8CACA,6BACI,4BAAQ3D,QAAS,WAzBjB,IAAC0I,IAyBqC/J,OAAOqG,EAAM0D,IAxBnEnK,EAASoM,GAAgBjC,IACzBzH,QAAQC,IAAIwH,GACZ/E,MAsBgB,OACA,4BAAQ3D,QAAS2D,GAAjB,QAGR,4BAAQ3D,QAhBA,WACZ+D,GAAQ,KAeJ,aCWDyH,GAzCe,WAAM,MAURzN,oBAAS,GAVD,mBAU3B2F,EAV2B,KAUnBK,EAVmB,KAY5BJ,EAAa,WACbI,GAAQ,IASZ,OAEI,6BACI,kBAAC,GAAD,CAAOL,OAAQA,EAAQC,WAAYA,GAC/B,wCACA,kBAAC,IAAD,CAAS9D,GAAG,WAAZ,UACA,6BACI,4BAAQG,QAAU2D,GAAlB,OACA,4BAAQ3D,QAAS2D,GAAjB,QAGR,4BAAQ3D,QAjBA,WACZ+D,GAAQ,KAgBJ,YCwDG0H,OA1Ff,WAGI,IAAIlB,EAAWpM,aAAY,SAACC,GAAD,OAAyBA,EAAMsN,KAAKnB,YAC3DhM,EAAWC,cAEfmC,qBAAU,WACNpC,EAASmM,QACV,IAGH,IAAIP,EAAgB,SAACzB,GACjB,IAAIyB,EAAgB,CAChBmB,QAAS,CACL5C,GAAIA,EACJwC,YAAa,eACbK,MAAO,MAGfhN,EJ0IuB,SAAC4L,GAAD,8CAAyC,WAAO5L,GAAP,SAAAQ,EAAA,+EAE1DiL,GAAoBG,GAFsC,uBAG1D5L,EAASmM,MAHiD,uDAKhErI,MAAM,KAAErD,SAAW,KAAEA,SAASC,KAAK1C,MAAQ,KAAEqO,SALmB,yDAAzC,sDI1Ide,CAAgBxB,KAiBzByB,EAAgBrB,EAAStD,KAAI,SAAA6D,GAG7B,OACI,yBAAKf,IAAKe,EAAEpC,GAAI/F,MAAO,CAACE,QAAS,OAAQgJ,cAAe,MAAO9I,WAAY,WACvE,yBAAKJ,MAAO,CAAC8B,MAAO,QAASqG,EAAEI,aAC/B,yBAAKvI,MAAO,CAACE,QAAS,OAAQgJ,cAAe,MAAO9I,WAAY,SAAU0B,MAAO,QAC7E,6BAAMqG,EAAES,QAEZ,yBAAK5I,MAAO,CAAC8B,MAAO,QAChB,4BAAQzE,QAAS,kBAAMmK,EAAcW,EAAEpC,MAAvC,UACA,oCAAU,kBAAC,GAAD,CAAaA,GAAIoC,EAAEpC,MAC7B,4BAAQ1I,QAAS,kBAtBd0I,EAsBgCoC,EAAEpC,GAtBVwC,EAsBcJ,EAAEI,YAtBKK,EAsBQT,EAAES,WAftEhN,EJ6EG,CACH7B,KAnHqB,uBAmHO8N,KIpFd,CACV9B,GAAIA,EACJwC,YAAaA,EACbK,MAAOA,EACP3N,OAAO,KALG,IAAC8K,EAAwBwC,EAAqBK,IAsBhD,oBAOhB,OACI,6BAEI,yBAAK5I,MAAO,CAACmJ,UAAW,WAAxB,SACA,yBAAKxM,UAAWC,KAAEwM,aACd,yBAAKpJ,MAAO,CAAC8B,MAAO,QAApB,WACA,yBAAK9B,MAAO,CAACE,QAAS,OAAQgJ,cAAe,MAAO9I,WAAY,SAAU0B,MAAO,QAC7E,uCACA,6BACI,6BACI,wCAEJ,6BACI,0CAIZ,yBAAK9B,MAAO,CAAC8B,MAAO,QAEZ,kBAAC,GAAD,MACA,kBAACuH,GAAD,QAMZ,yBAAK1M,UAAWC,KAAE0M,WACbL,GAGL,kBAAC,IAAD,CAAS/L,GAAG,WAAZ,YCpBGqM,GA/DU,WAErB,IAAI1B,EAAOrM,aAAY,SAACC,GAAD,OAAyBA,EAAMsN,KAAKlB,QACvDjM,EAAWC,cAMX2N,EAAa,SAACzD,GACdnK,ELsIoB,SAACmK,GAAD,8CAA2B,WAAOnK,GAAP,SAAAQ,EAAA,+EAEzCiL,GAAoBrL,OAAO+J,IAFc,uBAIzCnK,EAASkM,GAAmB/B,IAJa,uDAO/CrG,MAAM,KAAErD,SAAW,KAAEA,SAASC,KAAK1C,MAAQ,KAAEqO,SAPE,yDAA3B,sDKtIXwB,CAAa1D,KAOtBkD,EAAgBpB,EAAKvD,KAAI,SAAC6D,EAAG/C,GAC7B,OACI,yBAAKgC,IAAKhC,EAAOpF,MAAO,CAACE,QAAS,OAAQgJ,cAAe,MAAO9I,WAAY,WACxE,yBAAKJ,MAAO,CAAC8B,MAAO,QAASqG,EAAEI,aAC/B,yBAAKvI,MAAO,CAACE,QAAS,OAAQgJ,cAAe,MAAO9I,WAAY,SAAU0B,MAAO,QAC7E,6BAAMqG,EAAES,QAEZ,yBAAK5I,MAAO,CAAC8B,MAAO,QAChB,2BAAO/H,KAAM,WAAY+C,SAAU,kBAZhC,SAACsI,GAChBxJ,ELmGgC,SAACwJ,GACrC,MAAO,CACHrL,KAvHsB,wBAuHOqL,SKrGpBsE,CAAyBtE,IAWmBuE,CAAavE,IAAQhI,QAAS+K,EAAElN,QACzE,4BAAQoC,QAAS,WAAOmM,EAAWpE,KAAnC,YAMhB,OACI,6BACI,yBAAKpF,MAAO,CAACmJ,UAAW,WACpB,wCAEJ,yBAAKxM,UAAWC,KAAEwM,aACd,yBAAKpJ,MAAO,CAAC8B,MAAO,QAApB,WACA,yBAAK9B,MAAO,CAACE,QAAS,OAAQgJ,cAAe,MAAO9I,WAAY,SAAU0B,MAAO,QAC7E,uCACA,6BACI,6BACI,wCAEJ,6BACI,0CAIZ,yBAAK9B,MAAO,CAAC8B,MAAO,QAChB,4BAAQzE,QA9CH,WAEjBzB,ELoFG,CACH7B,KAjGwB,8BKwDZ,YAGR,yBAAK4C,UAAWC,KAAE0M,WACbL,GAGL,kBAAC,IAAD,CAAS/L,GAAI,SAAb,U,oBCPG0M,GA3DD,WAEV,IAAIC,EAAWC,sBACXC,EAAWD,sBAHC,EAKiC1O,oBAAS,GAL1C,mBAsCZ4O,GAtCY,UAsCCD,GAAYA,EAASE,SAAWF,EAASE,QAAQC,OAAS,IAG3E,OACI,yBAAKvN,UAAW,SACZ,6BACI,2BAAO5C,KAAM,OAAQoQ,IAAKN,EAAU7J,MAAO,CAACE,QAAS,UACrD,4BAAQ7C,QAtCM,WAClBwM,EAASI,SACTJ,EAASI,QAAQG,UAoCb,aAEJ,6BACI,2BAAO7M,IAAK8M,KAAIF,IAAKJ,EAAUO,UAAU,IACzC,4BAAQjN,QApCJ,WACR0M,EAASE,SACTF,EAASE,QAAQM,SAkCb,QACA,4BAAQlN,QA/BH,WACT0M,EAASE,SACTF,EAASE,QAAQO,UA6Bb,SACA,4BAAQnN,QA1BN,WACN0M,EAASE,UACTF,EAASE,QAAQC,QAAS,KAwBI5M,WAAY0M,GAAtC,KACA,4BAAQ3M,QArBJ,WACR0M,EAASE,UAETF,EAASE,QAAQC,QAAS,MAkBtB,QCpBDO,GApBO,WACpB,OACE,6BACE,kBAAC,EAAD,MACE,yBAAK9N,UAAWC,IAAE8N,KACd,kBAAC,IAAD,CAAOC,OAAQ,kBAAM,kBAAC,EAAD,OAAUC,KAAK,WACpC,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,EAAD,OAAiBC,KAAK,kBAC3C,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,EAAD,OAAoBC,KAAK,sBAC9C,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,GAAD,OAAYC,KAAK,aACtC,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,GAAD,OAAYC,KAAO,YACxC,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,GAAD,OAASC,KAAO,UACrC,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,GAAD,OAAWC,KAAO,WACvC,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,GAAD,OAASC,KAAO,UACrC,kBAAC,IAAD,CAAOD,OAAQ,kBAAO,kBAAC,GAAD,OAAWC,KAAO,YACxC,kBAAC,IAAD,CAAOD,OAAQ,kBAAO,kBAAC,GAAD,OAAUC,KAAO,cClB/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBCRAC,GAAcC,aAAgB,CAChCtO,MAAO3B,EACPwD,aAAchB,EACdjD,SAAUuE,EACVrD,QAASX,EACTU,QAAS1B,EACT+O,KAAMb,KAOKzM,GAFD2P,aAAYF,GAAaG,aAAgBC,OCZvDC,IAASZ,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUlP,MAAOA,IACb,kBAAC,GAAD,QAEU+P,SAASC,eAAe,SF6HxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtM,MAAK,SAAAZ,GACjCA,EAAamN,kB","file":"static/js/main.2f19cff6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"Shop_tableHeader__1A0Ex\",\"tableBody\":\"Shop_tableBody__7xDfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__110u2\",\"inputsItems\":\"Registration_inputsItems__srUIL\",\"error\":\"Registration_error__1vs1L\",\"password\":\"Registration_password__370EI\",\"repeatPassword\":\"Registration_repeatPassword__18mc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__NfkYV\",\"error\":\"Login_error__3G7xA\",\"email\":\"Login_email__2ljO8\"};","module.exports = __webpack_public_path__ + \"static/media/loader.07a3367d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__2Sbcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showing\":\"Modal_showing__36bEk\",\"modal\":\"Modal_modal__2FSt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2USoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recover\":\"Password_recover__1myuN\",\"error\":\"Password_error__1y5zY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2ffbG\",\"error\":\"Profile_error__2D5_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modals_modal__PWTgK\"};","module.exports = __webpack_public_path__ + \"static/media/comandir.00dacddc.mp3\";","const LOADING = 'LOADING';\r\nconst ERROR = 'ERROR';\r\nconst AUTH_SUCCESS = 'AUTH_SUCCESS';\r\n\r\ninterface IInitialStateBolean {\r\n    isLoading: boolean,\r\n    error: string,\r\n    success: boolean\r\n}\r\nexport interface ILoadingAction {\r\n    type: typeof LOADING,\r\n}\r\nexport interface IErrorAction {\r\n    type: typeof ERROR,\r\n    error: string\r\n}\r\nexport interface IAuthSuccessAction {\r\n    type: typeof AUTH_SUCCESS,\r\n    success: boolean\r\n}\r\ntype IActions = ILoadingAction | IErrorAction | IAuthSuccessAction;\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: '',\r\n    success: false\r\n};\r\n\r\nconst booleanReducer = (state: IInitialStateBolean = initialState, action: IActions): IInitialStateBolean => {\r\n        switch (action.type) {\r\n            case LOADING: {\r\n                return {\r\n                    ...state,\r\n                    isLoading: !state.isLoading\r\n                }\r\n            }\r\n            case ERROR: {\r\n                return {\r\n                    ...state,\r\n                    error: action.error\r\n                }\r\n            }\r\n            case AUTH_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    success: action.success\r\n                }\r\n        }\r\n        return state;\r\n    };\r\n\r\nexport const isLoadingAC = (): ILoadingAction => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n};\r\n\r\nexport const errorAC = (error: string): IErrorAction => ({type: ERROR, error});\r\n\r\nexport const isAuthSuccess = (success: boolean): IAuthSuccessAction => {\r\n    return {type: AUTH_SUCCESS, success}\r\n};\r\n\r\nexport default booleanReducer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://dry-forest-56016.herokuapp.com/auth/'\r\n})\r\n\r\nexport const loginApi = {\r\n    putLogin(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`login`, {email: email, password: password, rememberMe: rememberMe})\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://dry-forest-56016.herokuapp.com/auth/'\r\n})\r\n\r\nexport const profileApi = {\r\n    postProfile(token: string | null) {\r\n        return instance.post(`me`, {token})\r\n    }\r\n}","import {profileApi} from '../api/apiProfile'\r\nimport {Dispatch} from \"redux\";\r\nimport {isLoadingAC} from \"./booleanReducer\";\r\n\r\n/*const LOADING = 'LOADING';*/\r\nconst IS_AUTH = 'IS_AUTH';\r\nconst NAME = 'NAME';\r\n\r\ninterface IState {\r\n    name: string\r\n    /*isLoading: boolean*/\r\n    isAuth: boolean\r\n}\r\n\r\ninterface IAction {\r\n    type: /*typeof LOADING*/ | typeof IS_AUTH | typeof NAME\r\n    /*isLoading: boolean*/\r\n    name: string\r\n    value: boolean\r\n}\r\n\r\nconst initialState: IState = {\r\n    /*isLoading: false,*/\r\n    name: '',\r\n    isAuth: true\r\n};\r\n\r\nexport const reducerProfile = (state: IState = initialState, action: IAction): IState => {\r\n    switch (action.type) {\r\n        /*case LOADING: {\r\n            return {\r\n                ...state, isLoading: !state.isLoading\r\n            }\r\n        }*/\r\n        case NAME: {\r\n            return {\r\n                ...state, name: action.name\r\n            }\r\n        }\r\n        case IS_AUTH: {\r\n            return {\r\n                ...state, isAuth: action.value\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n/*let isLoadingAC = () => ({type: LOADING});*/\r\nlet nameAC = (name: string) => ({type: NAME, name});\r\nexport let isAuthTrue = () => ({type: IS_AUTH, value: true});\r\nexport let isAuthFalse = () => ({type: IS_AUTH, value: false});\r\n\r\nexport const postProfileTC = (token: string | null) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(isLoadingAC());\r\n        let response = await profileApi.postProfile(token);\r\n        localStorage.setItem('stringToken', response.data.token);\r\n        dispatch(isAuthFalse());\r\n        dispatch(nameAC(response.data.name))\r\n    } catch (e) {\r\n        console.log(e.response.data.error)\r\n    }\r\n    dispatch(isLoadingAC())\r\n};\r\n\r\nexport const logoutTC = () =>  (dispatch: Dispatch) => {\r\n    localStorage.setItem('stringToken', '');\r\n    dispatch(isAuthTrue())\r\n};\r\n\r\nexport default reducerProfile","import {loginApi} from '../api/apiLogin'\r\nimport {Dispatch} from \"redux\";\r\nimport {isAuthFalse} from './profileReducer';\r\nimport {errorAC, isLoadingAC} from \"./booleanReducer\";\r\n\r\n/*const ERROR = 'ERROR';*/\r\n/*const LOADING = 'LOADING';*/\r\n\r\ninterface IState {\r\n    /*error: string*/\r\n    /*isLoading: boolean*/\r\n}\r\n\r\ninterface IAction {\r\n   /* type: typeof ERROR | typeof LOADING\r\n    error: string\r\n    isLoading: boolean*/\r\n}\r\n\r\n\r\nconst initialState: IState = {\r\n   /* error: '',*/\r\n    /*isLoading: false*/\r\n};\r\n\r\nconst reducerLogin = (state: IState = initialState, action: IAction): IState => {\r\n    // switch (action.type) {\r\n    //     case ERROR: {\r\n    //         return {\r\n    //             ...state, error: action.error\r\n    //         }\r\n    //     }\r\n    //     case LOADING: {\r\n    //         return {\r\n    //             ...state, isLoading: !state.isLoading\r\n    //         }\r\n    //     }\r\n    //     default: {\r\n            return state\r\n    //     }\r\n    // }\r\n};\r\n\r\n/*export let errorLoginAC = (error: string) => ({type: ERROR, error});*/\r\n/*let isLoginAC = () => ({type: LOADING});*/\r\n\r\nexport const putLoginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(isLoadingAC());\r\n        let response = await loginApi.putLogin(email, password, rememberMe);\r\n        if (response.data.rememberMe) {\r\n            localStorage.setItem('stringToken', response.data.token)\r\n        }\r\n        dispatch(isAuthFalse())\r\n    } catch (e) {\r\n        dispatch(errorAC(e.response.data.error))\r\n    }\r\n    dispatch(isLoadingAC())\r\n};\r\n\r\nexport default reducerLogin","import {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {errorAC} from \"../../redux/booleanReducer\";\r\nimport {putLoginTC} from \"../../redux/loginReducer\";\r\n\r\n\r\nexport const useLoginLogic = () => {\r\n    let [email, setLoginState] = useState('');\r\n    let [password, setPasswordState] = useState('');\r\n    let [rememberMe, setValueState] = useState(false);\r\n    let error = useSelector((store: AppStateType) => store.boolean.error);\r\n    let isAuth = useSelector((store: AppStateType) => store.profile.isAuth);\r\n    let isLoading = useSelector((store: AppStateType) => store.boolean.isLoading);\r\n    let dispatch = useDispatch();\r\n    let validationEmail = (email: string) => {\r\n        let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n        return reg.test(String(email).toLowerCase())\r\n    };\r\n    let sendData = () => {\r\n        if (!validationEmail(email) || password.length < 7) {\r\n            dispatch(errorAC('Email/Password введен не корректно'))\r\n        } else {\r\n            dispatch(putLoginTC(email, password, rememberMe))\r\n        }\r\n    };\r\n\r\n    return {\r\n        isAuth, error, isLoading, email,\r\n        password, rememberMe, setLoginState,\r\n        setPasswordState, setValueState, sendData\r\n    }\r\n\r\n};","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport loading from '../Registration/svgImages/loader.svg';\r\nimport {useLoginLogic} from \"./useLoginLogic\";\r\n\r\nconst Login: React.FC = () => {\r\n    const {\r\n        isAuth, error, isLoading, email, password,\r\n        rememberMe, setLoginState, setPasswordState,\r\n        setValueState, sendData} = useLoginLogic();\r\n\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h2>Sign in</h2>\r\n            <span className={s.error}>{error}</span>\r\n            <div className={s.email}>\r\n                <span>Email:</span>\r\n                <input value={email} onChange={(e) => setLoginState(e.currentTarget.value)}/>\r\n            </div>\r\n            <div>\r\n                <span>Password:</span>\r\n                <input value={password} onChange={(e) => setPasswordState(e.target.value)} type={'password'}/>\r\n            </div>\r\n\r\n\r\n            <NavLink to={'/password_recover'}><span>Forgot password?</span></NavLink>\r\n            <div className={s.rememberMe}>\r\n                <input type={'checkbox'} placeholder={'Remember Me'} onChange={() => setValueState(!rememberMe)} checked={rememberMe}/>\r\n                <span>Remember me</span>\r\n            </div>\r\n            <button onClick={sendData} disabled={isLoading}>Sign In</button>\r\n            {/*<NavLink to={'/registration'}><span>Registration</span></NavLink>*/}\r\n            {isLoading &&\r\n            <img src={loading}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://dry-forest-56016.herokuapp.com/auth/\"\r\n});\r\n\r\n\r\nexport const apiRegistration = {\r\n    sendEmail (email: string, password: string) {\r\n        return instance.post(\"register\", {email, password})\r\n    }\r\n};","import {apiRegistration} from '../api/apiRegistration';\r\nimport {AppStateType} from \"./store\";\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {errorAC, IAuthSuccessAction, IErrorAction, ILoadingAction, isAuthSuccess, isLoadingAC} from \"./booleanReducer\";\r\n\r\n/*const ERROR_REGISTRATION_DATA = 'ERROR_REGISTRATION_DATA';*/\r\n/*const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST';*/\r\n/*const AUTH_SUCCESS = 'AUTH_SUCCESS';*/\r\n\r\n/*interface IErrorRegistrationDataAction {\r\n    type: typeof ERROR_REGISTRATION_DATA;\r\n    error: string\r\n}*/\r\n\r\n/*interface IRegistrationRequestSendAction {\r\n    type: typeof REGISTRATION_REQUEST,\r\n}*/\r\n\r\n/*interface IAuthSuccessAction {\r\n    type: typeof AUTH_SUCCESS,\r\n    success: boolean\r\n}*/\r\n\r\ninterface IInitialStateRegistration {\r\n   /* error: string,\r\n    isLoading: boolean,\r\n    success: boolean*/\r\n}\r\n\r\nexport type IActionsRegistration = ILoadingAction | IErrorAction | IAuthSuccessAction;\r\n\r\n\r\nconst initialState: IInitialStateRegistration = {\r\n    /*error: '',\r\n    isLoading: false,\r\n    success: false*/\r\n};\r\n\r\nconst reducerRegistration = (state: IInitialStateRegistration = initialState, action: IActionsRegistration): IInitialStateRegistration => {\r\n        switch (action.type) {\r\n            // case ERROR_REGISTRATION_DATA: {\r\n            //     return {\r\n            //         ...state,\r\n            //         error: action.error\r\n            //     };\r\n            // }\r\n            /*case REGISTRATION_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    isLoading: !state.isLoading\r\n                };*/\r\n            /*case AUTH_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    success: action.success\r\n                }*/\r\n        }\r\n        return state;\r\n    };\r\n\r\n// const errorRegistrationData = (error: string): IErrorRegistrationDataAction => {\r\n//     return {\r\n//         type: ERROR_REGISTRATION_DATA,\r\n//         error\r\n//     }\r\n// };\r\n\r\n/*const isRegistrationRequestSend = (): IRegistrationRequestSendAction => {\r\n    return {\r\n        type: REGISTRATION_REQUEST\r\n    }\r\n};*/\r\n\r\n/*const isAuthSuccess = (success: boolean): IAuthSuccessAction => {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        success\r\n    }\r\n};*/\r\n\r\n\r\nexport const sendRegistrationRequest = (email: string, password: string): ThunkAction<void, AppStateType, {}, IActionsRegistration> =>\r\n    async (dispatch: ThunkDispatch<AppStateType, {}, IActionsRegistration>) => {\r\n        try {\r\n            dispatch(isLoadingAC());\r\n            let response = await apiRegistration.sendEmail(email, password);\r\n            console.log(response);\r\n            dispatch(isAuthSuccess(response.data.success));\r\n        } catch (error) {\r\n            dispatch(errorAC(error.response.data.error))\r\n        }\r\n        dispatch(isLoadingAC());\r\n    };\r\n\r\nexport default reducerRegistration;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {errorAC} from \"../../redux/booleanReducer\";\r\nimport {sendRegistrationRequest} from \"../../redux/registrationReducer\";\r\n\r\n\r\nexport  const useRegistrationLogic = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repeatPassword, setRepeatPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const {error, isLoading, success} = useSelector((store: AppStateType) => {return store.boolean});\r\n    useEffect(() => {}, [error]);\r\n    useEffect(() => {}, [isLoading]);\r\n    const onSetEmail = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        setEmail(e.currentTarget.value);\r\n        dispatch(errorAC(``));\r\n    };\r\n    const onSetPassword = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        setPassword(e.currentTarget.value);\r\n        dispatch(errorAC(``));\r\n    };\r\n    const onSetRepeatPassword = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        setRepeatPassword(e.currentTarget.value);\r\n        dispatch(errorAC(``));\r\n    };\r\n    const validate = (email: string) => {\r\n        const expression = /^[\\w]{1}[\\w-\\.]*@[\\w-]+\\.[a-z]{2,7}$/i;\r\n        return expression.test(String(email).toLowerCase())\r\n    };\r\n    const onRegisterClick = (): void => {\r\n        if (repeatPassword !== password) {\r\n            dispatch(errorAC(`Passwords don't match`))\r\n        } else if (password.length <= 7) {\r\n            dispatch(errorAC(`Password must contain minimum 8 symbols`))\r\n        } else if (!validate(email)) {\r\n            dispatch(errorAC(`Email is not valid`))\r\n        } else {\r\n            dispatch(sendRegistrationRequest(email, password))\r\n        }\r\n    };\r\n    return {\r\n        error, success, onSetEmail,\r\n        onSetPassword, onSetRepeatPassword,\r\n        onRegisterClick, isLoading\r\n    }\r\n};","import React from 'react';\r\nimport s from '../Registration/Registration.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport loading from \"../Registration/svgImages/loader.svg\";\r\nimport {useRegistrationLogic} from \"./useRegistrationLogic\";\r\n\r\n\r\nconst Registration: React.FC = () => {\r\n    const {error, success, onSetEmail, onSetPassword,\r\n        onSetRepeatPassword, onRegisterClick,\r\n        isLoading} = useRegistrationLogic();\r\n\r\n    if (success) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className={s.registration}>\r\n            <h2>Register</h2>\r\n                <div className={s.email}>\r\n                    <span>Email:</span>\r\n                    <input type=\"text\" onChange={onSetEmail}/>\r\n                </div>\r\n                <div className={s.password}>\r\n                    <span >Password:</span>\r\n                    <input type=\"password\" onChange={onSetPassword}/>\r\n                </div>\r\n                <div className={s.repeatPassword}>\r\n                    <span>Repeat password:</span>\r\n                    <input type=\"password\" onChange={onSetRepeatPassword}/>\r\n                </div>\r\n            <span className={s.sp}>{error}</span>\r\n            {isLoading &&\r\n            <span><img src={loading} alt=\"\"/></span>\r\n            }\r\n            <button onClick={onRegisterClick} disabled={isLoading}>Register</button>\r\n            <NavLink to='/login'><span>Sign in</span></NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Registration;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://dry-forest-56016.herokuapp.com/',\r\n    headers:{\"Content-Type\": \"application/json\",\r\n    'Access-Control-Allow-Origin':'*'}\r\n})\r\n\r\nexport const recoveryAPI = {\r\n    recovery(email: string) {\r\n        return instance.post(`auth/forgot`, {email})\r\n    }\r\n}","import { recoveryAPI } from './../api/apiRecovery';\r\n// import {recoveryAPI} from '../api-recovery/api'\r\nconst ADD_RECOVERY = 'ADD_RECOVERY'\r\nconst SET_IS_TRUE = 'SET_IS_TRUE'\r\n\r\n\r\ninterface IState {\r\n    error: string\r\n}\r\n\r\ninterface IAction {\r\n    type: typeof SET_IS_TRUE\r\n    message: string\r\n    isTrue:any,\r\n    error:any\r\n}\r\nconst initialState = {\r\n    isTrue: false,\r\n    error:''\r\n  }\r\n\r\n\r\nexport const reducerPasswordRecovery = (state = initialState, action: IAction): IState =>\r\n{\r\n    switch (action.type) {\r\n      case SET_IS_TRUE:\r\n        return {\r\n          ...state,\r\n          ...action.error\r\n        }\r\n      default: return state\r\n    }\r\n  }\r\n\r\n  export const setIsTrue = (error1:any) => ({ type: SET_IS_TRUE, error:error1 })\r\n  export const sendRecoveryPasswordRequest = (email:any) => {\r\n    return (dispatch:any) => {\r\n      recoveryAPI.recovery(email)\r\n        .then(data => {\r\n\r\n          console.log(data)\r\n        })\r\n        .catch(error => {\r\n          let error1 = error.response.data.error\r\n          console.log(error1)\r\n          dispatch(setIsTrue(error1))\r\n          alert(error1)\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n\r\nexport default reducerPasswordRecovery","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {sendRecoveryPasswordRequest} from \"../../redux/passwordRecoveryReducer\";\r\n\r\n\r\nexport const usePasswordRecoverLogic = () => {\r\n    const [emailValue , setEmailValue] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    let sendEmailValue = (e: React.FormEvent<HTMLInputElement>) =>{setEmailValue(e.currentTarget.value)};\r\n    const sendRecoveryPassword = () =>{dispatch(sendRecoveryPasswordRequest(emailValue))};\r\n    return{sendEmailValue, sendRecoveryPassword}\r\n};","import React from 'react';\r\nimport s from './Password.module.css'\r\nimport {usePasswordRecoverLogic} from \"./usePasswordRecoverLogic\";\r\n\r\n\r\n\r\nconst PasswordRecover: React.FC = () => {\r\n  const {sendEmailValue, sendRecoveryPassword} = usePasswordRecoverLogic();\r\n  \r\n  return (\r\n    <div className={s.recover}>\r\n        <h2>Forgot password?</h2>\r\n        <input onChange = {sendEmailValue}></input>\r\n        <button onClick = {sendRecoveryPassword}>Send request</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordRecover;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\nconst Header: React.FC = () => {\r\n    let [showHeader, setShowHeader] = useState(false)\r\n\r\n  return (\r\n    <div className=\"App\" style={{backgroundColor: '#31353d'}}>\r\n        {showHeader?\r\n        <div style = {{display: 'flex', justifyContent: 'space-around', alignItems: 'center'}}>\r\n<Button variant=\"contained\" color=\"primary\" onClick = {() =>setShowHeader(false)}>Hide dev header</Button>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/login'>sign-in</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/registration'>register</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/password_recover'>forgot</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/profile'>neko</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/modals'>modals</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/time'>time</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/color'>color</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/shop'>shop</NavLink>\r\n<NavLink style = {{textDecoration : 'none', color: 'white'}} to='/audio'>audio</NavLink>\r\n\r\n        </div>:<Button variant=\"contained\" color=\"primary\" onClick = {() =>setShowHeader(true)}>Show dev header</Button>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useEffect} from \"react\";\r\nimport {postProfileTC} from \"../../redux/profileReducer\";\r\n\r\n\r\nexport const  useProfileLogic = () => {\r\n    let {isAuth,name} = useSelector((store: AppStateType) => store.profile);\r\n    let token: string | null = localStorage.getItem('stringToken');\r\n    let dispatch = useDispatch();\r\n    useEffect(() => {dispatch(postProfileTC(token))}, []);\r\n    return {isAuth, name, dispatch}\r\n};","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport {logoutTC} from \"../../redux/profileReducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport {useProfileLogic} from \"./useProfileLogic\";\r\n\r\nconst Profile: React.FC = () => {\r\n    const {isAuth, name, dispatch} = useProfileLogic();\r\n    if (isAuth) {return <Redirect to={'/login'}/>}\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <h1>{name}</h1>\r\n            <button onClick={() => {dispatch(logoutTC())}}>Log out</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport s from './Modal.module.css'\r\n\r\ninterface IProps {\r\n    isShow: boolean\r\n    closeModal: () => void\r\n\r\n}\r\n\r\nconst Modal: React.FC<IProps> = ({children, isShow, closeModal}) => {\r\n\r\n\r\n    if (!isShow) return null\r\n\r\n    return (\r\n        <div className={s.showing} >\r\n            <div className={s.modal}>\r\n                {children}\r\n            </div>\r\n        </div>);\r\n\r\n\r\n};\r\n\r\n\r\nexport default Modal;","import React, {useState} from \"react\";\r\nimport Modal from \"../Component/Modal\";\r\n\r\nconst ModalComponentSimple: React.FC = () => {\r\n\r\n    let [isShow, setShow] = useState(false)\r\n\r\n    let closeModal = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    let openModal = () => {\r\n        setShow(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal isShow={isShow} closeModal={closeModal}>\r\n                <span>Simple Modal</span>\r\n                <button onClick={closeModal}>Close</button>\r\n            </Modal>\r\n            <button onClick={openModal}>show simple Modal</button>\r\n        </div>);\r\n};\r\n\r\n\r\n\r\nexport default ModalComponentSimple;","import React, {useState} from \"react\";\r\nimport Modal from \"../Component/Modal\";\r\n\r\nconst ModalComponentQuestion: React.FC = () => {\r\n\r\n    let [isShow, setShow] = useState(false)\r\n\r\n    let closeModal = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    let openModal = () => {\r\n        setShow(true)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal isShow={isShow} closeModal={closeModal}>\r\n                <span>question Modal</span>\r\n                <div>\r\n                    <button onClick={closeModal}>Yes</button>\r\n                    <button onClick={closeModal}>No</button>\r\n                </div>\r\n            </Modal>\r\n            <button onClick={openModal}>show question Modal</button>No\r\n        </div>);\r\n};\r\n\r\n\r\n\r\nexport default ModalComponentQuestion;","import React, {useState} from \"react\";\r\nimport Modal from \"../Component/Modal\";\r\n\r\nconst ModalComponentInput: React.FC = () => {\r\n\r\n    let [isShow, setShow] = useState(false)\r\n\r\n    let closeModal = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    let openModal = () => {\r\n        setShow(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal isShow={isShow} closeModal={closeModal}>\r\n                <span>Question Modal</span>\r\n                <input/>\r\n                <input/>\r\n                <input/>\r\n                <button onClick={closeModal}>OK</button>\r\n            </Modal>\r\n            <button onClick={openModal}>show input Modal</button>test answer--\r\n        </div>);\r\n};\r\n\r\n\r\n\r\nexport default ModalComponentInput;","import React, {CSSProperties, useEffect, useState} from \"react\";\r\n\r\n\r\nconst ModalComponentMessage: React.FC = () => {\r\n\r\n    let [paddingTop, changeTop] = useState(-50)\r\n    // let [valueToChange, changeValue] = useState(false)\r\n\r\n\r\n            useEffect(()=> {if (!(paddingTop <= -50))showModal()}, [paddingTop])\r\n            // useEffect(()=> {dontShowModal()}, [paddingTop])\r\n\r\n    let showModal = () => {\r\n        if (paddingTop < 150) {setTimeout(() => {\r\n            changeTop(paddingTop+1)\r\n        }, 10)} else {\r\n            changeTop(150)\r\n            dontShowModal()\r\n        }\r\n    }\r\n\r\n    let dontShowModal = () => {\r\n        setTimeout(()=>{\r\n            setTimeout(()=> {\r\n                changeTop(-50)\r\n            }, 10)\r\n        }, 5000)\r\n    }\r\n\r\n\r\n\r\n\r\n    let messageStyle: CSSProperties = {\r\n        width: 80,\r\n        height: 50,\r\n        backgroundColor: 'red',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        top: paddingTop,\r\n        left: 'calc(50vw-40px)'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={messageStyle}>\r\n                <span>message Modal</span>\r\n            </div>\r\n            <button onClick={showModal}>show message Modal</button>\r\n        </div>);\r\n};\r\n\r\n\r\nexport default ModalComponentMessage;","import React from \"react\";\r\nimport ModalComponentSimple from \"./ModalComponentSimple/ModalComponentSimple\";\r\nimport ModalComponentQuestion from \"./ModalComponentQuestion/ModalComponentQuestion\";\r\nimport ModalComponentInput from \"./ModalComponentInput/ModalComponentInput\";\r\nimport ModalComponentMessage from \"./ModalComponentMessage/ModalComponentMessage\";\r\nimport s from \"./Component/Modals.module.css\"\r\n\r\n\r\nconst Modals: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.modal}>\r\n            <ModalComponentSimple/>\r\n            <ModalComponentQuestion/>\r\n            <ModalComponentInput/>\r\n            <ModalComponentMessage/>\r\n        </div>);\r\n};\r\n\r\n\r\n\r\nexport default Modals;","import React, {useEffect, useState} from 'react';\r\nimport s from './Time.module.css'\r\n\r\nconst Time = (props: any) => {\r\n\r\n    let [time] = useState(new Date().toLocaleTimeString())\r\n    let [timeInThisMoment, changeTimeInThisMoment] = useState(new Date().toLocaleTimeString())\r\n\r\n    let changeValueFalse = () => {\r\n        changeTimeInThisMoment(new Date().toLocaleTimeString())\r\n        changeValueButton(false)\r\n    }\r\n\r\n    let [newTime, checkTime] = useState(time)\r\n    let [buttonStartStopChange, changeValueButton] = useState(true)\r\n    let [buttonStartPlayPause, changeValueButtonPlay] = useState(true)\r\n    let [pauseValue, changeValuePause] = useState(\"00:00:00\")\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            checkTime(new Date().toLocaleTimeString())\r\n        }, 1000)\r\n    }, [newTime])\r\n\r\n    let valueTime = buttonStartStopChange ? newTime : timeInThisMoment\r\n\r\n    let firstTimeInObject: any = new Date('December 17, 1995 ' + valueTime)\r\n\r\n    let secondTimeInObject: any = new Date('December 17, 1995 ' + newTime)\r\n\r\n    let differenceTime1: any = (-(new Date().getTimezoneOffset()/60)*2)\r\n\r\n    let differenceTime: any = new Date(1970, 1, 1, differenceTime1)\r\n\r\n    let difference: any = new Date('December 17, 1995 ' + pauseValue)\r\n\r\n\r\n    let elapsedTime = time  > newTime ? new Date(firstTimeInObject- secondTimeInObject - differenceTime - difference) : new Date(secondTimeInObject - firstTimeInObject - differenceTime - difference)\r\n\r\n    let elapsedTime1: string = elapsedTime.toLocaleTimeString()\r\n\r\n    let changeValueTrueStart = () => {\r\n        changeValueButtonPlay(true)\r\n        changeValueButton(true)\r\n        let value = buttonStartPlayPause ? elapsedTime1 : pauseValue\r\n        props.addedTimeInArray(value)\r\n    }\r\n\r\n\r\n    let changeValueTruePause = () => {\r\n        changeValueButtonPlay(false)\r\n        changeValuePause(elapsedTime1)\r\n    }\r\n\r\n    let changeValueTruePlay = () => {\r\n        changeValueButtonPlay(true)\r\n        changeValuePause(elapsedTime1)\r\n\r\n    }\r\n\r\n    let allTimeTracker =  buttonStartPlayPause ? elapsedTime1 : pauseValue\r\n\r\n    return (\r\n\r\n        <div className={s.time}>\r\n            <span>time tracker</span>\r\n            <span>({newTime})</span>\r\n            <div>\r\n                <span>(start time: {buttonStartStopChange ? newTime : timeInThisMoment})-(end time: {newTime})=(all time: {allTimeTracker})</span>\r\n            </div>\r\n            {buttonStartStopChange ?\r\n                <button onClick={changeValueFalse}>start</button> : <div>\r\n                    <button onClick={changeValueTrueStart}>stop</button>\r\n                    {buttonStartPlayPause ?\r\n                        <button onClick={changeValueTruePause}>pause</button> :\r\n                        <button onClick={changeValueTruePlay}>play</button>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Time;","import React from 'react';\r\n\r\ninterface IProps {\r\n    time: string\r\n}\r\n\r\nconst ArrayResult = (props: IProps) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>{props.time}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ArrayResult;","import React, {useEffect, useState} from 'react';\r\nimport s from './Time.module.css'\r\nimport TimeTracker from './TimeTracker'\r\nimport ArrayResult from './arrayResult/ArrayResult'\r\n\r\ninterface ITimes {\r\n    t: string\r\n}\r\n\r\nconst Time: React.FC = () => {\r\n    let [newArr, setNewArr] = useState([])\r\n    let [time] = useState(new Date().toLocaleTimeString())\r\n    let [firstTime, changeFirstTime] = useState(new Date().toLocaleTimeString())\r\n    let [secondTime, changeSecondTime] = useState(new Date().toLocaleTimeString())\r\n\r\n\r\n    let changeFirst = (e: any) => {\r\n        changeFirstTime(e.currentTarget.value)\r\n    }\r\n\r\n    let changeSecond = (e: any) => {\r\n        changeSecondTime(e.currentTarget.value)\r\n    }\r\n\r\n    let firstTimeInObject: any = new Date('December 17, 1995 ' + firstTime)\r\n\r\n    let secondTimeInObject: any = new Date('December 17, 1995 ' + secondTime)\r\n\r\n    let differenceTime1: any = (-(new Date().getTimezoneOffset() / 60) * 2)\r\n\r\n    let differenceTime: any = new Date(1991, 2, 2, differenceTime1)\r\n\r\n    let elapsedTime = firstTime > secondTime ? new Date(firstTimeInObject - secondTimeInObject - differenceTime) : new Date(secondTimeInObject - firstTimeInObject - differenceTime)\r\n\r\n    let elapsedTime1 = elapsedTime.toLocaleTimeString()\r\n\r\n    let arrayTime: Array<string> = []\r\n\r\n    let element = newArr.map(times => {\r\n        return <ArrayResult time={times}/>\r\n    })\r\n\r\n    let addedTimeInArray = (elapsedTime1: string) => {\r\n        if (!('00:00:00' === elapsedTime1))\r\n            arrayTime.push(elapsedTime1)\r\n        let arr: any = newArr\r\n        arr = [...arr, elapsedTime1]\r\n        setNewArr(arr)\r\n    }\r\n\r\n    return (\r\n        <div className={s.time}>\r\n            <h2>Time</h2>\r\n            <div>{time}</div>\r\n            <input type={'time'}/>\r\n            <div>\r\n                <input type={'time'} value={firstTime} onChange={changeFirst}/>---<input type={'time'}\r\n                                                                                         value={secondTime}\r\n                                                                                         onChange={changeSecond}/>===<input\r\n                type={'time'} value={elapsedTime1}/>\r\n            </div>\r\n            <TimeTracker addedTimeInArray={addedTimeInArray}/>\r\n            {element}\r\n            {/*<ArrayResult time={time}/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Time;","import React from \"react\";\r\nimport './Color.css'\r\nimport {useColorLogic} from \"./useColorLogic\";\r\n\r\nconst Color: React.FC = () => {\r\n\r\n    const {setValues, changeValueForGradient, changeColorForGradient,\r\n        addInputElement, deleteInputElement, changeDeg,\r\n        changeColor, color, styles, deg, inputMass} = useColorLogic();\r\n\r\n    return (\r\n        <div className='colorContainer'>\r\n            <h1>Chose color</h1>\r\n            <input type=\"color\" onChange={changeColor} value={color}/>\r\n            <div className='choseColor' style={{backgroundColor: color}}/>\r\n            <div style={styles.div}/>\r\n            <button onClick={setValues}>Start</button>\r\n            <input type=\"number\" value={deg} onChange={changeDeg}/>\r\n            {inputMass.map((c: any, i) => {\r\n                return (\r\n                    <div key={i}>\r\n                        <input type=\"color\" value={c.color} onChange={(e) => changeColorForGradient(e, c.id)}/>\r\n                        <input type=\"number\" value={c.value} onChange={(e) => changeValueForGradient(e, c.id)}/>\r\n                        <button onClick={() => deleteInputElement(c.id)}>delete</button>\r\n                    </div>)\r\n            })}\r\n            <button onClick={addInputElement}>Add</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Color;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nexport const useColorLogic = () => {\r\n    const getColorGradient = (el: any): string => `${el.color} ${el.value}%,`;\r\n    const getColorsString = (items: any, deg: string) => items.reduce((acc: string, elem: any, index: number) => {\r\n        if (index === items.length - 1) {\r\n            let stringN = getColorGradient(elem);\r\n            acc = `${acc}${stringN.substring(0, stringN.length - 1)})`;\r\n        } else {\r\n            acc = acc + getColorGradient(elem);\r\n        }\r\n        return acc;\r\n    }, `linear-gradient(${deg}deg,`);\r\n    const [styles, setStyles] = useState({\r\n        div: {\r\n            width: '400px',\r\n            height: '100px',\r\n            margin: '10px',\r\n            background: '',\r\n            border: '1px solid white'\r\n        }\r\n    });\r\n    let [color, setColor] = useState('#7FFF00');\r\n    let [deg, setDeg] = useState('90');\r\n    let [inputMass, setInputMass] = useState([\r\n        {color: '#240000', value: -12, id: 0},\r\n        {color: '#777777', value: 30, id: 1},\r\n        {color: '#CD00CD', value: 60, id: 2},\r\n        {color: '#0000FF', value: 80, id: 3},\r\n        {color: '#7FFF00', value: 112, id: 4}]);\r\n    useEffect(() => {\r\n        inputMass.forEach((el: any, i: number, array: any) => {\r\n            if (el.value === 125) {\r\n                el.value = el.value + 1;\r\n                setInputMass([{...el, value: -20}, ...inputMass.filter((input: any) => {\r\n                    return input.value < 135\r\n                })])\r\n            }\r\n        });\r\n\r\n        setStyles(\r\n            {\r\n                ...styles,\r\n                div: {\r\n                    ...styles.div,\r\n                    background: getColorsString(inputMass, deg)\r\n                }\r\n            }\r\n        );\r\n    }, [inputMass, deg]);\r\n    const changeColor = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setColor(e.currentTarget.value)\r\n    };\r\n    const changeDeg = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setDeg(e.currentTarget.value)\r\n    };\r\n    const deleteInputElement = (id: number) => {\r\n        setInputMass(inputMass.filter((el: any) => {\r\n            return el.id !== id\r\n        }));\r\n    };\r\n    const addInputElement = () => {\r\n        setInputMass(\r\n            [\r\n                ...inputMass,\r\n                {\r\n                    ...inputMass[inputMass.length - 1],\r\n                    id: inputMass[inputMass.length - 1].id + 1\r\n                }\r\n            ]\r\n        )\r\n    };\r\n    const changeColorForGradient = (e: React.FormEvent<HTMLInputElement>, id: number) => {\r\n        let newArray: any = inputMass.map(el => {\r\n            if (el.id === id) {\r\n                return {...el, color: e.currentTarget.value}\r\n            } else {\r\n                return el\r\n            }\r\n        });\r\n        setInputMass(newArray)\r\n    };\r\n    const changeValueForGradient = (e: React.FormEvent<HTMLInputElement>, id: number) => {\r\n        let newArray: any = inputMass.map(el => {\r\n            if (el.id === id) {\r\n                return {...el, value: e.currentTarget.value}\r\n            } else {\r\n                return el\r\n            }\r\n        });\r\n        setInputMass(newArray)\r\n    };\r\n    const setValues = () => {\r\n        let i = 12;\r\n        const interval = setInterval(() => {\r\n            setInputMass(prevState => prevState.map(el => {\r\n                return {\r\n                    ...el,\r\n                    value: el.value + 1\r\n                }\r\n            }));\r\n            i--;\r\n        }, 100);\r\n        if (i === 0) {\r\n            clearInterval(interval);\r\n        }\r\n    };\r\n    return {\r\n        setValues, changeValueForGradient, changeColorForGradient,\r\n        addInputElement, deleteInputElement, changeDeg,\r\n        changeColor, color, styles, deg, inputMass\r\n    }\r\n};","import axios from \"axios\";\r\nimport {INewAndUpdateProduct} from \"../redux/tableReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://dry-forest-56016.herokuapp.com'\r\n})\r\n\r\nexport const shopApi = {\r\n    getProducts() {\r\n        return instance.get('/shop?pageCount=10')\r\n    },\r\n    postProducts(newProduct: INewAndUpdateProduct) {\r\n        return instance.post('/shop', newProduct)\r\n    },\r\n    putProducts(updateProduct: INewAndUpdateProduct) {\r\n        return instance.put('/shop', updateProduct)\r\n    },\r\n    deleteProducts(id: string) {\r\n        return instance.delete(`/shop?id=${id}`)\r\n    },\r\n    buyProducts(id: string) {\r\n        debugger\r\n        return instance.post('/shop/buy',id)\r\n            .then(response => {alert(response.data.answer)})\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {shopApi} from \"../api/apiShop\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\n\r\nconst SET_PRODUCTS = 'SET_PRODUCTS';\r\nconst SET_PRODUCTS_IN_CART = 'SET_PRODUCTS_IN_CART';\r\nconst DELETE_PRODUCTS_IN_CART = 'DELETE_PRODUCTS_IN_CART';\r\nconst CHANGE_VALUE_CHECKBOX = 'CHANGE_VALUE_CHECKBOX';\r\nconst BUY_PRODUCTS_IN_CART = 'BUY_PRODUCTS_IN_CART'\r\n\r\ninterface IProduct {\r\n    id?: string\r\n    productName: string\r\n    price: number\r\n    value?: boolean\r\n}\r\n\r\nexport interface INewAndUpdateProduct {\r\n    product: {\r\n        id?: string\r\n        productName: string\r\n        price: number\r\n    }\r\n}\r\n\r\ninterface IState {\r\n    products: IProduct[]\r\n    cart: IProduct[]\r\n}\r\n\r\ninterface IActionSetProducts {\r\n    type: typeof SET_PRODUCTS\r\n    products: IProduct[]\r\n}\r\n\r\ninterface IActionSetProductsInCart {\r\n    type: typeof SET_PRODUCTS_IN_CART\r\n    cart: IProduct\r\n}\r\n\r\ninterface IActionDeleteProductsInCart {\r\n    type: typeof DELETE_PRODUCTS_IN_CART\r\n}\r\ninterface IActionBuyProductsInCart {\r\n    type: typeof BUY_PRODUCTS_IN_CART\r\n    id: number | undefined\r\n}\r\n\r\ninterface IActionChangeValueProductInCart {\r\n    type: typeof CHANGE_VALUE_CHECKBOX\r\n    index: number\r\n}\r\n\r\n\r\ntype IActions = IActionSetProducts | IActionSetProductsInCart | IActionDeleteProductsInCart | IActionChangeValueProductInCart | IActionBuyProductsInCart\r\n\r\n\r\n\r\nconst initialState: IState = {\r\n    products: [],\r\n    cart: []\r\n}\r\n\r\nconst tableReducer = (state: IState = initialState, action: IActions): IState => {\r\n    switch (action.type) {\r\n        case SET_PRODUCTS: {\r\n            return {\r\n                ...state, products: action.products\r\n            }\r\n        }\r\n        case SET_PRODUCTS_IN_CART: {\r\n            return {\r\n                ...state, cart: [...state.cart, action.cart]\r\n            }\r\n        }\r\n        case DELETE_PRODUCTS_IN_CART: {\r\n            return {\r\n                ...state, cart: [...state.cart.filter(p => !p.value)]\r\n            }\r\n        }\r\n        case BUY_PRODUCTS_IN_CART: {\r\n            return {\r\n                ...state, cart: [...state.cart.filter(p => !p.value)]\r\n            }\r\n        }\r\n        case CHANGE_VALUE_CHECKBOX: {\r\n            return {\r\n                ...state, cart: state.cart.map((p, index) => {\r\n                    debugger\r\n                    if (index === action.index) {\r\n                        return {...p, value: !p.value}\r\n                    } else {\r\n                        return p\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const deleteProductInCartAC = (): IActions => {\r\n    return {\r\n        type: DELETE_PRODUCTS_IN_CART\r\n    }\r\n};\r\nexport const buyProductInCartAC = (id:number | undefined): IActions => {\r\n    return {\r\n        type: BUY_PRODUCTS_IN_CART,id\r\n    }\r\n};\r\n\r\nconst setProductAC = (products: IProduct[]): IActions => {\r\n    return {\r\n        type: SET_PRODUCTS, products\r\n    }\r\n};\r\n\r\nexport const setProductInCartAC = (cart: IProduct): IActions => {\r\n    return {\r\n        type: SET_PRODUCTS_IN_CART, cart\r\n    }\r\n};\r\n\r\nexport const changeValueProductInCart = (index: number): IActions => {\r\n    return {\r\n        type: CHANGE_VALUE_CHECKBOX, index\r\n    }\r\n};\r\n\r\n\r\nexport const getProductTC = () => async (dispatch: Dispatch) => {\r\n    let response = await shopApi.getProducts();\r\n    if (response.data.products.length >= 1) {\r\n        dispatch(setProductAC(response.data.products))\r\n    }\r\n}\r\n\r\nexport const addProductTC = (newProduct: INewAndUpdateProduct) => async (dispatch: ThunkDispatch<AppStateType, {}, IActions>) => {\r\n    try {\r\n        await shopApi.postProducts(newProduct);\r\n        await dispatch(getProductTC())\r\n    } catch (e) {\r\n        alert(e.response ? e.response.data.error : e.message)\r\n    }\r\n}\r\n\r\nexport const deleteProductTC = (id: string) => async (dispatch: ThunkDispatch<AppStateType, {}, IActions>) => {\r\n    try {\r\n        await shopApi.deleteProducts(String(id));\r\n        await dispatch(getProductTC())\r\n    } catch (e) {\r\n        alert(e.response ? e.response.data.error : e.message)\r\n    }\r\n}\r\nexport const buyProductTC = (id:number | undefined) => async (dispatch: ThunkDispatch<AppStateType, {}, IActions>) => {\r\n    try {\r\n        await shopApi.buyProducts(String(id));\r\n        debugger\r\n        await dispatch(buyProductInCartAC(id))\r\n\r\n    } catch (e) {\r\n        alert(e.response ? e.response.data.error : e.message)\r\n    }\r\n}\r\n\r\nexport const updateProductTC = (updateProduct: INewAndUpdateProduct) => async (dispatch: ThunkDispatch<AppStateType, {}, IActions>) => {\r\n    try {\r\n        await shopApi.putProducts(updateProduct);\r\n        await dispatch(getProductTC())\r\n    } catch (e) {\r\n        alert(e.response ? e.response.data.error : e.message)\r\n    }\r\n}\r\n\r\nexport default tableReducer;","import React, {useState} from \"react\";\r\nimport Modal from '../../Modals/Component/Modal';\r\nimport {\r\n    addProductTC\r\n} from './../../../redux/tableReducer'\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst ModalAdd: React.FC = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let addProduct = () => {\r\n        let newProduct = {\r\n            product: {\r\n                productName: productName,\r\n                price: priceCost\r\n            }\r\n        }\r\n        dispatch(addProductTC(newProduct))\r\n        closeModal()\r\n    }\r\n    let [priceCost, setPriceCost] = useState(0)\r\n    let setPriceCostValue = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setPriceCost(Number(e.currentTarget.value))\r\n    }\r\n    let [productName, setProductName] = useState('a')\r\n    let productNameSet = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setProductName(e.currentTarget.value)\r\n    }\r\n    let [isShow, setShow] = useState(false)\r\n\r\n    let closeModal = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    let openModal = () => {\r\n        setShow(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal isShow={isShow} closeModal={closeModal}>\r\n                <button onClick={closeModal}>close</button>\r\n                <span>add new product:</span>\r\n                <input onChange={productNameSet} placeholder='test product name'/>\r\n                <input onChange={setPriceCostValue} placeholder='0'/>\r\n                <button onClick={addProduct}>OK</button>\r\n            </Modal>\r\n            <button onClick={openModal}>add</button>\r\n\r\n        </div>);\r\n};\r\n\r\n\r\nexport default ModalAdd;","import React, {useState} from \"react\";\r\nimport Modal from '../../Modals/Component/Modal';\r\nimport {deleteProductTC} from \"../../../redux/tableReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\ninterface IProps {\r\n    id:string | undefined\r\n}\r\n\r\n\r\n    const ModalDelete: React.FC<IProps> = (props:IProps) => {\r\n    let dispatch = useDispatch();\r\n    debugger\r\n    let deleteProduct = (id: string ) => {\r\n        dispatch(deleteProductTC(id))\r\n        console.log(id)\r\n        closeModal()\r\n    }\r\n\r\n\r\n    let [isShow, setShow] = useState(false)\r\n\r\n        let closeModal = () => {\r\n            setShow(false)\r\n        }\r\n\r\n        let openModal = () => {\r\n            setShow(true)\r\n        }\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Modal isShow={isShow} closeModal={closeModal}>\r\n                    <span>are you sure</span>\r\n                    <div>\r\n                        <button onClick={() => {deleteProduct(String(props.id))}}>Yes</button>\r\n                        <button onClick={closeModal}>No</button>\r\n                    </div>\r\n                </Modal>\r\n                <button onClick={openModal}>delete?</button>\r\n            </div>);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\nexport default ModalDelete;\r\n","import React, {useState} from \"react\";\r\nimport Modal from './../Modals/Component/Modal'\r\n// import {deleteProductTC} from \"../../../redux/tableReducer\";\r\n// import {useDispatch} from \"react-redux\";\r\nimport Basket from \"./Basket\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// interface IProps {\r\n//     id:string | undefined\r\n// }\r\n\r\n\r\nconst ModalDelete: React.FC = () => {\r\n    // let dispatch = useDispatch();\r\n    // debugger\r\n    // let deleteProduct = (id: string ) => {\r\n    //     dispatch(deleteProductTC(id))\r\n    //     console.log(id)\r\n    //     closeModal()\r\n    // }\r\n\r\n\r\n    let [isShow, setShow] = useState(false)\r\n\r\n    let closeModal = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    let openModal = () => {\r\n        setShow(true)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Modal isShow={isShow} closeModal={closeModal}>\r\n                <span>Basket</span>\r\n                <NavLink to='/basket'>basket</NavLink>\r\n                <div>\r\n                    <button onClick= {closeModal}>Yes</button>\r\n                    <button onClick={closeModal}>No</button>\r\n                </div>\r\n            </Modal>\r\n            <button onClick={openModal}>Basket</button>\r\n        </div>);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default ModalDelete;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {deleteProductTC, getProductTC, setProductInCartAC, updateProductTC} from \"../../redux/tableReducer\";\r\nimport s from \"./Shop.module.css\"\r\nimport ModalAdd from \"./modalAdd/ModalAdd\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ModalDelete from \"./modalDelete/ModalDelete\";\r\nimport ModalBasket from './ModalBasket'\r\n\r\nfunction Shop() {\r\n\r\n    // let isAuth = useSelector((store: AppStateType) => store.profile.isAuth) //if there is not authentication the buttons are disabled\r\n    let products = useSelector((store: AppStateType) => store.shop.products)\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductTC())\r\n    }, [])\r\n\r\n\r\n    let updateProduct = (id: string | undefined) => {\r\n        let updateProduct = {\r\n            product: {\r\n                id: id,\r\n                productName: 'MegaTrackGig',\r\n                price: 3000,\r\n            }\r\n        }\r\n        dispatch(updateProductTC(updateProduct))\r\n    }\r\n\r\n    let deleteProduct = (id: string | undefined) => {\r\n        dispatch(deleteProductTC(id || ''))\r\n    }\r\n\r\n    let addInToCart = (id: string | undefined, productName: string, price: number) => {\r\n        let product = {\r\n            id: id,\r\n            productName: productName,\r\n            price: price,\r\n            value: false\r\n        }\r\n        dispatch(setProductInCartAC(product))\r\n    }\r\n\r\n    let tableProducts = products.map(p => {\r\n\r\n\r\n        return (\r\n            <div key={p.id} style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <div style={{width: '55%'}}>{p.productName}</div>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '25%'}}>\r\n                    <div>{p.price}</div>\r\n                </div>\r\n                <div style={{width: '20%'}}>\r\n                    <button onClick={() => updateProduct(p.id)}>update</button>\r\n                    <button > <ModalDelete id={p.id}/></button>\r\n                    <button onClick={() => addInToCart(p.id, p.productName, p.price)}>add to cart</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <div>\r\n\r\n            <div style={{textAlign: 'center'}}>table</div>\r\n            <div className={s.tableHeader}>\r\n                <div style={{width: '55%'}}>product</div>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '30%'}}>\r\n                    <div>price.</div>\r\n                    <div>\r\n                        <div>\r\n                            <button>/\\</button>\r\n                        </div>\r\n                        <div>\r\n                            <button>\\/</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{width: '15%'}}>\r\n\r\n                        <ModalAdd/>\r\n                        <ModalBasket/>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className={s.tableBody}>\r\n                {tableProducts}\r\n            </div>\r\n\r\n            <NavLink to='/basket'>basket</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shop\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport s from \"./Shop.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    buyProductInCartAC, buyProductTC,\r\n    changeValueProductInCart,\r\n    deleteProductInCartAC,\r\n    deleteProductTC\r\n} from \"../../redux/tableReducer\";\r\n\r\nconst Basket: React.FC = () => {\r\n\r\n    let cart = useSelector((store: AppStateType) => store.shop.cart)\r\n    let dispatch = useDispatch();\r\n\r\n    let deleteProducts = () => {\r\n        debugger\r\n        dispatch(deleteProductInCartAC())\r\n    }\r\n    let buyProduct = (id: number | undefined) => {\r\n        dispatch(buyProductTC(id ))\r\n    }\r\n\r\n    let checkProduct = (index: number) => {\r\n        dispatch(changeValueProductInCart(index))\r\n    }\r\n\r\n    let tableProducts = cart.map((p, index) => {\r\n        return (\r\n            <div key={index} style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <div style={{width: '55%'}}>{p.productName}</div>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '25%'}}>\r\n                    <div>{p.price}</div>\r\n                </div>\r\n                <div style={{width: '20%'}}>\r\n                    <input type={'checkbox'} onChange={() => checkProduct(index)} checked={p.value}/>\r\n                    <button onClick={() => {buyProduct(index)}}>buy</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign: 'center'}}>\r\n                <span>table</span>\r\n            </div>\r\n            <div className={s.tableHeader}>\r\n                <div style={{width: '55%'}}>product</div>\r\n                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '30%'}}>\r\n                    <div>price.</div>\r\n                    <div>\r\n                        <div>\r\n                            <button>/\\</button>\r\n                        </div>\r\n                        <div>\r\n                            <button>\\/</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{width: '15%'}}>\r\n                    <button onClick={deleteProducts}>delete</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.tableBody}>\r\n                {tableProducts}\r\n            </div>\r\n\r\n            <NavLink to={'/shop'}>Shop</NavLink>\r\n        </div>);\r\n};\r\n\r\n\r\nexport default Basket;","import React, {createRef, useState} from \"react\";\r\nimport au from './audioFile/comandir.mp3'\r\n\r\n\r\nconst Audio = () => {\r\n\r\n    let inputRef = createRef<HTMLInputElement>();\r\n    let audioRef = createRef<HTMLAudioElement>();\r\n\r\n    let [disabledUpVolume, changeDisabledUpVolume] = useState(true)\r\n\r\n    let downloadFileOnClick = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.click()\r\n        }\r\n    }\r\n\r\n    let playSound = () => {\r\n        if (audioRef.current) {\r\n            audioRef.current.play()\r\n        }\r\n    }\r\n\r\n    let pauseSound = () => {\r\n        if (audioRef.current) {\r\n            audioRef.current.pause()\r\n        }\r\n    }\r\n\r\n    let upSound = () => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume +=0.1\r\n        }\r\n    }\r\n\r\n    let downSound = () => {\r\n        if (audioRef.current) {\r\n            debugger\r\n            audioRef.current.volume -=0.1\r\n        }\r\n    }\r\n\r\n    let disabledUp = audioRef && audioRef.current && audioRef.current.volume > 0.9\r\n\r\n\r\n    return (\r\n        <div className={'Audio'}>\r\n            <div>\r\n                <input type={'file'} ref={inputRef} style={{display: 'none'}}/>\r\n                <button onClick={downloadFileOnClick}>Download</button>\r\n            </div>\r\n            <div>\r\n                <audio src={au} ref={audioRef} controls={true}/>\r\n                <button onClick={playSound}>Play</button>\r\n                <button onClick={pauseSound}>Pause</button>\r\n                <button onClick={upSound} disabled={!!disabledUp}>+</button>\r\n                <button onClick={downSound}>-</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Audio;","import React from 'react';\r\nimport s from './App.module.css';\r\nimport {Route} from \"react-router-dom\";\r\nimport Login from './Components/Login/Login'\r\nimport Registration from './Components/Registration/Registration'\r\nimport PasswordRecover from './Components/PasswordRecovery/PasswordRecover'\r\nimport Header from './Components/Header/header';\r\nimport Profile from './Components/Profile/Profile';\r\nimport Modals from \"./Components/Modals/Modals\";\r\nimport Time from \"./Components/Time/Time\";\r\nimport Color from \"./Components/Color/Color\";\r\nimport Shop from \"./Components/Shop/Shop\";\r\nimport Basket from \"./Components/Shop/Basket\"\r\nimport Audio from \"./Components/AudioPlayer/AudioPlayer\"\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div >\r\n      <Header/>\r\n        <div className={s.app}>\r\n            <Route render={() => <Login/>} path='/login'/>\r\n            <Route render={() => <Registration/>} path='/registration'/>\r\n            <Route render={() => <PasswordRecover/>} path='/password_recover'/>\r\n            <Route render={() => <Profile/>} path='/profile'/>\r\n            <Route render={() => <Modals />} path = '/modals'/>\r\n            <Route render={() => <Time/>} path = '/time'/>\r\n            <Route render={() => <Color />} path = '/color'/>\r\n            <Route render={() => <Shop/>} path = '/shop'/>\r\n            <Route render={() =>  <Basket/>} path = '/basket'/>\r\n            <Route render={() =>  <Audio/>} path = '/audio'/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport reducerPasswordRecovery from './passwordRecoveryReducer'\r\nimport reducerRegistration from './registrationReducer'\r\nimport reducerLogin from './loginReducer'\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport reducerProfile from \"./profileReducer\";\r\nimport booleanReducer from \"./booleanReducer\";\r\nimport tableReducer from \"./tableReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: reducerLogin,\r\n    registration: reducerRegistration,\r\n    password: reducerPasswordRecovery,\r\n    profile: reducerProfile,\r\n    boolean: booleanReducer,\r\n    shop: tableReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}